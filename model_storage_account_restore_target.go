/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StorageAccountRestoreTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StorageAccountRestoreTarget{}

// StorageAccountRestoreTarget Information about the storage account where you want to restore the files. If you don't specify a target, the files are restored to the original storage account. 
type StorageAccountRestoreTarget struct {
	// Name of the storage account to restore the files to.
	Name string `json:"name"`
	// Name of the resource group that contains the storage account.
	ResourceGroup *string `json:"resourceGroup,omitempty"`
	// Name of the container in the storage account to restore the files to.
	Container string `json:"container"`
	// Prefix to add to the restore path. If you don't specify a prefix, the files are restored to their respective folders in the original file tree, starting from the root of the container. 
	Prefix *string `json:"prefix,omitempty"`
}

type _StorageAccountRestoreTarget StorageAccountRestoreTarget

// NewStorageAccountRestoreTarget instantiates a new StorageAccountRestoreTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageAccountRestoreTarget(name string, container string) *StorageAccountRestoreTarget {
	this := StorageAccountRestoreTarget{}
	this.Name = name
	this.Container = container
	return &this
}

// NewStorageAccountRestoreTargetWithDefaults instantiates a new StorageAccountRestoreTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageAccountRestoreTargetWithDefaults() *StorageAccountRestoreTarget {
	this := StorageAccountRestoreTarget{}
	return &this
}

// GetName returns the Name field value
func (o *StorageAccountRestoreTarget) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StorageAccountRestoreTarget) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StorageAccountRestoreTarget) SetName(v string) {
	o.Name = v
}

// GetResourceGroup returns the ResourceGroup field value if set, zero value otherwise.
func (o *StorageAccountRestoreTarget) GetResourceGroup() string {
	if o == nil || IsNil(o.ResourceGroup) {
		var ret string
		return ret
	}
	return *o.ResourceGroup
}

// GetResourceGroupOk returns a tuple with the ResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageAccountRestoreTarget) GetResourceGroupOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroup) {
		return nil, false
	}
	return o.ResourceGroup, true
}

// HasResourceGroup returns a boolean if a field has been set.
func (o *StorageAccountRestoreTarget) HasResourceGroup() bool {
	if o != nil && !IsNil(o.ResourceGroup) {
		return true
	}

	return false
}

// SetResourceGroup gets a reference to the given string and assigns it to the ResourceGroup field.
func (o *StorageAccountRestoreTarget) SetResourceGroup(v string) {
	o.ResourceGroup = &v
}

// GetContainer returns the Container field value
func (o *StorageAccountRestoreTarget) GetContainer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Container
}

// GetContainerOk returns a tuple with the Container field value
// and a boolean to check if the value has been set.
func (o *StorageAccountRestoreTarget) GetContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Container, true
}

// SetContainer sets field value
func (o *StorageAccountRestoreTarget) SetContainer(v string) {
	o.Container = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *StorageAccountRestoreTarget) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageAccountRestoreTarget) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *StorageAccountRestoreTarget) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *StorageAccountRestoreTarget) SetPrefix(v string) {
	o.Prefix = &v
}

func (o StorageAccountRestoreTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StorageAccountRestoreTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.ResourceGroup) {
		toSerialize["resourceGroup"] = o.ResourceGroup
	}
	toSerialize["container"] = o.Container
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	return toSerialize, nil
}

func (o *StorageAccountRestoreTarget) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"container",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStorageAccountRestoreTarget := _StorageAccountRestoreTarget{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStorageAccountRestoreTarget)

	if err != nil {
		return err
	}

	*o = StorageAccountRestoreTarget(varStorageAccountRestoreTarget)

	return err
}

type NullableStorageAccountRestoreTarget struct {
	value *StorageAccountRestoreTarget
	isSet bool
}

func (v NullableStorageAccountRestoreTarget) Get() *StorageAccountRestoreTarget {
	return v.value
}

func (v *NullableStorageAccountRestoreTarget) Set(val *StorageAccountRestoreTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageAccountRestoreTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageAccountRestoreTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageAccountRestoreTarget(val *StorageAccountRestoreTarget) *NullableStorageAccountRestoreTarget {
	return &NullableStorageAccountRestoreTarget{value: val, isSet: true}
}

func (v NullableStorageAccountRestoreTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageAccountRestoreTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


