/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AzureRestoreAccountAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureRestoreAccountAttributes{}

// AzureRestoreAccountAttributes Azure subscription configuration. Applicable if `cloudProvider` is set to `AZURE`. 
type AzureRestoreAccountAttributes struct {
	// ID of the tenant the subscription belongs to.
	TenantId string `json:"tenantId"`
	// Resource group name.
	ResourceGroupName *string `json:"resourceGroupName,omitempty"`
}

type _AzureRestoreAccountAttributes AzureRestoreAccountAttributes

// NewAzureRestoreAccountAttributes instantiates a new AzureRestoreAccountAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureRestoreAccountAttributes(tenantId string) *AzureRestoreAccountAttributes {
	this := AzureRestoreAccountAttributes{}
	this.TenantId = tenantId
	return &this
}

// NewAzureRestoreAccountAttributesWithDefaults instantiates a new AzureRestoreAccountAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureRestoreAccountAttributesWithDefaults() *AzureRestoreAccountAttributes {
	this := AzureRestoreAccountAttributes{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *AzureRestoreAccountAttributes) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *AzureRestoreAccountAttributes) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *AzureRestoreAccountAttributes) SetTenantId(v string) {
	o.TenantId = v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *AzureRestoreAccountAttributes) GetResourceGroupName() string {
	if o == nil || IsNil(o.ResourceGroupName) {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureRestoreAccountAttributes) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroupName) {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *AzureRestoreAccountAttributes) HasResourceGroupName() bool {
	if o != nil && !IsNil(o.ResourceGroupName) {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *AzureRestoreAccountAttributes) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

func (o AzureRestoreAccountAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureRestoreAccountAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	if !IsNil(o.ResourceGroupName) {
		toSerialize["resourceGroupName"] = o.ResourceGroupName
	}
	return toSerialize, nil
}

func (o *AzureRestoreAccountAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAzureRestoreAccountAttributes := _AzureRestoreAccountAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAzureRestoreAccountAttributes)

	if err != nil {
		return err
	}

	*o = AzureRestoreAccountAttributes(varAzureRestoreAccountAttributes)

	return err
}

type NullableAzureRestoreAccountAttributes struct {
	value *AzureRestoreAccountAttributes
	isSet bool
}

func (v NullableAzureRestoreAccountAttributes) Get() *AzureRestoreAccountAttributes {
	return v.value
}

func (v *NullableAzureRestoreAccountAttributes) Set(val *AzureRestoreAccountAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureRestoreAccountAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureRestoreAccountAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureRestoreAccountAttributes(val *AzureRestoreAccountAttributes) *NullableAzureRestoreAccountAttributes {
	return &NullableAzureRestoreAccountAttributes{value: val, isSet: true}
}

func (v NullableAzureRestoreAccountAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureRestoreAccountAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


