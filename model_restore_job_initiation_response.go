/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RestoreJobInitiationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreJobInitiationResponse{}

// RestoreJobInitiationResponse struct for RestoreJobInitiationResponse
type RestoreJobInitiationResponse struct {
	// Restore job ID.
	JobId string `json:"jobId"`
}

type _RestoreJobInitiationResponse RestoreJobInitiationResponse

// NewRestoreJobInitiationResponse instantiates a new RestoreJobInitiationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreJobInitiationResponse(jobId string) *RestoreJobInitiationResponse {
	this := RestoreJobInitiationResponse{}
	this.JobId = jobId
	return &this
}

// NewRestoreJobInitiationResponseWithDefaults instantiates a new RestoreJobInitiationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreJobInitiationResponseWithDefaults() *RestoreJobInitiationResponse {
	this := RestoreJobInitiationResponse{}
	return &this
}

// GetJobId returns the JobId field value
func (o *RestoreJobInitiationResponse) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *RestoreJobInitiationResponse) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *RestoreJobInitiationResponse) SetJobId(v string) {
	o.JobId = v
}

func (o RestoreJobInitiationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreJobInitiationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jobId"] = o.JobId
	return toSerialize, nil
}

func (o *RestoreJobInitiationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jobId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestoreJobInitiationResponse := _RestoreJobInitiationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestoreJobInitiationResponse)

	if err != nil {
		return err
	}

	*o = RestoreJobInitiationResponse(varRestoreJobInitiationResponse)

	return err
}

type NullableRestoreJobInitiationResponse struct {
	value *RestoreJobInitiationResponse
	isSet bool
}

func (v NullableRestoreJobInitiationResponse) Get() *RestoreJobInitiationResponse {
	return v.value
}

func (v *NullableRestoreJobInitiationResponse) Set(val *RestoreJobInitiationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreJobInitiationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreJobInitiationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreJobInitiationResponse(val *RestoreJobInitiationResponse) *NullableRestoreJobInitiationResponse {
	return &NullableRestoreJobInitiationResponse{value: val, isSet: true}
}

func (v NullableRestoreJobInitiationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreJobInitiationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
