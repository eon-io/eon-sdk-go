/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueryCostDataResponseRecordsInnerCostsInnerCost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryCostDataResponseRecordsInnerCostsInnerCost{}

// QueryCostDataResponseRecordsInnerCostsInnerCost Cost information with amount in cents and currency
type QueryCostDataResponseRecordsInnerCostsInnerCost struct {
	// Cost amount
	Amount float64 `json:"amount"`
	// Cost unit
	Unit string `json:"unit"`
}

type _QueryCostDataResponseRecordsInnerCostsInnerCost QueryCostDataResponseRecordsInnerCostsInnerCost

// NewQueryCostDataResponseRecordsInnerCostsInnerCost instantiates a new QueryCostDataResponseRecordsInnerCostsInnerCost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryCostDataResponseRecordsInnerCostsInnerCost(amount float64, unit string) *QueryCostDataResponseRecordsInnerCostsInnerCost {
	this := QueryCostDataResponseRecordsInnerCostsInnerCost{}
	this.Amount = amount
	this.Unit = unit
	return &this
}

// NewQueryCostDataResponseRecordsInnerCostsInnerCostWithDefaults instantiates a new QueryCostDataResponseRecordsInnerCostsInnerCost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryCostDataResponseRecordsInnerCostsInnerCostWithDefaults() *QueryCostDataResponseRecordsInnerCostsInnerCost {
	this := QueryCostDataResponseRecordsInnerCostsInnerCost{}
	var unit string = "CREDITS"
	this.Unit = unit
	return &this
}

// GetAmount returns the Amount field value
func (o *QueryCostDataResponseRecordsInnerCostsInnerCost) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QueryCostDataResponseRecordsInnerCostsInnerCost) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QueryCostDataResponseRecordsInnerCostsInnerCost) SetAmount(v float64) {
	o.Amount = v
}

// GetUnit returns the Unit field value
func (o *QueryCostDataResponseRecordsInnerCostsInnerCost) GetUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unit
}

// GetUnitOk returns a tuple with the Unit field value
// and a boolean to check if the value has been set.
func (o *QueryCostDataResponseRecordsInnerCostsInnerCost) GetUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unit, true
}

// SetUnit sets field value
func (o *QueryCostDataResponseRecordsInnerCostsInnerCost) SetUnit(v string) {
	o.Unit = v
}

func (o QueryCostDataResponseRecordsInnerCostsInnerCost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryCostDataResponseRecordsInnerCostsInnerCost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["unit"] = o.Unit
	return toSerialize, nil
}

func (o *QueryCostDataResponseRecordsInnerCostsInnerCost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"unit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryCostDataResponseRecordsInnerCostsInnerCost := _QueryCostDataResponseRecordsInnerCostsInnerCost{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryCostDataResponseRecordsInnerCostsInnerCost)

	if err != nil {
		return err
	}

	*o = QueryCostDataResponseRecordsInnerCostsInnerCost(varQueryCostDataResponseRecordsInnerCostsInnerCost)

	return err
}

type NullableQueryCostDataResponseRecordsInnerCostsInnerCost struct {
	value *QueryCostDataResponseRecordsInnerCostsInnerCost
	isSet bool
}

func (v NullableQueryCostDataResponseRecordsInnerCostsInnerCost) Get() *QueryCostDataResponseRecordsInnerCostsInnerCost {
	return v.value
}

func (v *NullableQueryCostDataResponseRecordsInnerCostsInnerCost) Set(val *QueryCostDataResponseRecordsInnerCostsInnerCost) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryCostDataResponseRecordsInnerCostsInnerCost) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryCostDataResponseRecordsInnerCostsInnerCost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryCostDataResponseRecordsInnerCostsInnerCost(val *QueryCostDataResponseRecordsInnerCostsInnerCost) *NullableQueryCostDataResponseRecordsInnerCostsInnerCost {
	return &NullableQueryCostDataResponseRecordsInnerCostsInnerCost{value: val, isSet: true}
}

func (v NullableQueryCostDataResponseRecordsInnerCostsInnerCost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryCostDataResponseRecordsInnerCostsInnerCost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


