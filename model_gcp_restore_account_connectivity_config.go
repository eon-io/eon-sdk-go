/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the GcpRestoreAccountConnectivityConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpRestoreAccountConnectivityConfig{}

// GcpRestoreAccountConnectivityConfig struct for GcpRestoreAccountConnectivityConfig
type GcpRestoreAccountConnectivityConfig struct {
	// Networks to configure.
	NetworkConfigs []GcpNetworkConnectivityConfig `json:"networkConfigs,omitempty"`
}

// NewGcpRestoreAccountConnectivityConfig instantiates a new GcpRestoreAccountConnectivityConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpRestoreAccountConnectivityConfig() *GcpRestoreAccountConnectivityConfig {
	this := GcpRestoreAccountConnectivityConfig{}
	return &this
}

// NewGcpRestoreAccountConnectivityConfigWithDefaults instantiates a new GcpRestoreAccountConnectivityConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpRestoreAccountConnectivityConfigWithDefaults() *GcpRestoreAccountConnectivityConfig {
	this := GcpRestoreAccountConnectivityConfig{}
	return &this
}

// GetNetworkConfigs returns the NetworkConfigs field value if set, zero value otherwise.
func (o *GcpRestoreAccountConnectivityConfig) GetNetworkConfigs() []GcpNetworkConnectivityConfig {
	if o == nil || IsNil(o.NetworkConfigs) {
		var ret []GcpNetworkConnectivityConfig
		return ret
	}
	return o.NetworkConfigs
}

// GetNetworkConfigsOk returns a tuple with the NetworkConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpRestoreAccountConnectivityConfig) GetNetworkConfigsOk() ([]GcpNetworkConnectivityConfig, bool) {
	if o == nil || IsNil(o.NetworkConfigs) {
		return nil, false
	}
	return o.NetworkConfigs, true
}

// HasNetworkConfigs returns a boolean if a field has been set.
func (o *GcpRestoreAccountConnectivityConfig) HasNetworkConfigs() bool {
	if o != nil && !IsNil(o.NetworkConfigs) {
		return true
	}

	return false
}

// SetNetworkConfigs gets a reference to the given []GcpNetworkConnectivityConfig and assigns it to the NetworkConfigs field.
func (o *GcpRestoreAccountConnectivityConfig) SetNetworkConfigs(v []GcpNetworkConnectivityConfig) {
	o.NetworkConfigs = v
}

func (o GcpRestoreAccountConnectivityConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpRestoreAccountConnectivityConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkConfigs) {
		toSerialize["networkConfigs"] = o.NetworkConfigs
	}
	return toSerialize, nil
}

type NullableGcpRestoreAccountConnectivityConfig struct {
	value *GcpRestoreAccountConnectivityConfig
	isSet bool
}

func (v NullableGcpRestoreAccountConnectivityConfig) Get() *GcpRestoreAccountConnectivityConfig {
	return v.value
}

func (v *NullableGcpRestoreAccountConnectivityConfig) Set(val *GcpRestoreAccountConnectivityConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpRestoreAccountConnectivityConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpRestoreAccountConnectivityConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpRestoreAccountConnectivityConfig(val *GcpRestoreAccountConnectivityConfig) *NullableGcpRestoreAccountConnectivityConfig {
	return &NullableGcpRestoreAccountConnectivityConfig{value: val, isSet: true}
}

func (v NullableGcpRestoreAccountConnectivityConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpRestoreAccountConnectivityConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


