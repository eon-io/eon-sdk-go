/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DisconnectSourceAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisconnectSourceAccountResponse{}

// DisconnectSourceAccountResponse struct for DisconnectSourceAccountResponse
type DisconnectSourceAccountResponse struct {
	SourceAccount SourceAccount `json:"sourceAccount"`
}

type _DisconnectSourceAccountResponse DisconnectSourceAccountResponse

// NewDisconnectSourceAccountResponse instantiates a new DisconnectSourceAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisconnectSourceAccountResponse(sourceAccount SourceAccount) *DisconnectSourceAccountResponse {
	this := DisconnectSourceAccountResponse{}
	this.SourceAccount = sourceAccount
	return &this
}

// NewDisconnectSourceAccountResponseWithDefaults instantiates a new DisconnectSourceAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisconnectSourceAccountResponseWithDefaults() *DisconnectSourceAccountResponse {
	this := DisconnectSourceAccountResponse{}
	return &this
}

// GetSourceAccount returns the SourceAccount field value
func (o *DisconnectSourceAccountResponse) GetSourceAccount() SourceAccount {
	if o == nil {
		var ret SourceAccount
		return ret
	}

	return o.SourceAccount
}

// GetSourceAccountOk returns a tuple with the SourceAccount field value
// and a boolean to check if the value has been set.
func (o *DisconnectSourceAccountResponse) GetSourceAccountOk() (*SourceAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccount, true
}

// SetSourceAccount sets field value
func (o *DisconnectSourceAccountResponse) SetSourceAccount(v SourceAccount) {
	o.SourceAccount = v
}

func (o DisconnectSourceAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisconnectSourceAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceAccount"] = o.SourceAccount
	return toSerialize, nil
}

func (o *DisconnectSourceAccountResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceAccount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDisconnectSourceAccountResponse := _DisconnectSourceAccountResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// Allow unknown fields to handle API schema differences
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDisconnectSourceAccountResponse)

	if err != nil {
		return err
	}

	*o = DisconnectSourceAccountResponse(varDisconnectSourceAccountResponse)

	return err
}

type NullableDisconnectSourceAccountResponse struct {
	value *DisconnectSourceAccountResponse
	isSet bool
}

func (v NullableDisconnectSourceAccountResponse) Get() *DisconnectSourceAccountResponse {
	return v.value
}

func (v *NullableDisconnectSourceAccountResponse) Set(val *DisconnectSourceAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDisconnectSourceAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDisconnectSourceAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisconnectSourceAccountResponse(val *DisconnectSourceAccountResponse) *NullableDisconnectSourceAccountResponse {
	return &NullableDisconnectSourceAccountResponse{value: val, isSet: true}
}

func (v NullableDisconnectSourceAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisconnectSourceAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


