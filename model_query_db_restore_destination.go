/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the QueryDBRestoreDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryDBRestoreDestination{}

// QueryDBRestoreDestination struct for QueryDBRestoreDestination
type QueryDBRestoreDestination struct {
	S3Bucket NullableS3RestoreDestination `json:"s3Bucket,omitempty"`
}

// NewQueryDBRestoreDestination instantiates a new QueryDBRestoreDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryDBRestoreDestination() *QueryDBRestoreDestination {
	this := QueryDBRestoreDestination{}
	return &this
}

// NewQueryDBRestoreDestinationWithDefaults instantiates a new QueryDBRestoreDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryDBRestoreDestinationWithDefaults() *QueryDBRestoreDestination {
	this := QueryDBRestoreDestination{}
	return &this
}

// GetS3Bucket returns the S3Bucket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QueryDBRestoreDestination) GetS3Bucket() S3RestoreDestination {
	if o == nil || IsNil(o.S3Bucket.Get()) {
		var ret S3RestoreDestination
		return ret
	}
	return *o.S3Bucket.Get()
}

// GetS3BucketOk returns a tuple with the S3Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QueryDBRestoreDestination) GetS3BucketOk() (*S3RestoreDestination, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3Bucket.Get(), o.S3Bucket.IsSet()
}

// HasS3Bucket returns a boolean if a field has been set.
func (o *QueryDBRestoreDestination) HasS3Bucket() bool {
	if o != nil && o.S3Bucket.IsSet() {
		return true
	}

	return false
}

// SetS3Bucket gets a reference to the given NullableS3RestoreDestination and assigns it to the S3Bucket field.
func (o *QueryDBRestoreDestination) SetS3Bucket(v S3RestoreDestination) {
	o.S3Bucket.Set(&v)
}
// SetS3BucketNil sets the value for S3Bucket to be an explicit nil
func (o *QueryDBRestoreDestination) SetS3BucketNil() {
	o.S3Bucket.Set(nil)
}

// UnsetS3Bucket ensures that no value is present for S3Bucket, not even an explicit nil
func (o *QueryDBRestoreDestination) UnsetS3Bucket() {
	o.S3Bucket.Unset()
}

func (o QueryDBRestoreDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryDBRestoreDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.S3Bucket.IsSet() {
		toSerialize["s3Bucket"] = o.S3Bucket.Get()
	}
	return toSerialize, nil
}

type NullableQueryDBRestoreDestination struct {
	value *QueryDBRestoreDestination
	isSet bool
}

func (v NullableQueryDBRestoreDestination) Get() *QueryDBRestoreDestination {
	return v.value
}

func (v *NullableQueryDBRestoreDestination) Set(val *QueryDBRestoreDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryDBRestoreDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryDBRestoreDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryDBRestoreDestination(val *QueryDBRestoreDestination) *NullableQueryDBRestoreDestination {
	return &NullableQueryDBRestoreDestination{value: val, isSet: true}
}

func (v NullableQueryDBRestoreDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryDBRestoreDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


