/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GcpAccountConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpAccountConfig{}

// GcpAccountConfig struct for GcpAccountConfig
type GcpAccountConfig struct {
	ServiceAccount string `json:"serviceAccount"`
}

type _GcpAccountConfig GcpAccountConfig

// NewGcpAccountConfig instantiates a new GcpAccountConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpAccountConfig(serviceAccount string) *GcpAccountConfig {
	this := GcpAccountConfig{}
	this.ServiceAccount = serviceAccount
	return &this
}

// NewGcpAccountConfigWithDefaults instantiates a new GcpAccountConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpAccountConfigWithDefaults() *GcpAccountConfig {
	this := GcpAccountConfig{}
	return &this
}

// GetServiceAccount returns the ServiceAccount field value
func (o *GcpAccountConfig) GetServiceAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value
// and a boolean to check if the value has been set.
func (o *GcpAccountConfig) GetServiceAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccount, true
}

// SetServiceAccount sets field value
func (o *GcpAccountConfig) SetServiceAccount(v string) {
	o.ServiceAccount = v
}

func (o GcpAccountConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpAccountConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serviceAccount"] = o.ServiceAccount
	return toSerialize, nil
}

func (o *GcpAccountConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serviceAccount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGcpAccountConfig := _GcpAccountConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGcpAccountConfig)

	if err != nil {
		return err
	}

	*o = GcpAccountConfig(varGcpAccountConfig)

	return err
}

type NullableGcpAccountConfig struct {
	value *GcpAccountConfig
	isSet bool
}

func (v NullableGcpAccountConfig) Get() *GcpAccountConfig {
	return v.value
}

func (v *NullableGcpAccountConfig) Set(val *GcpAccountConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpAccountConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpAccountConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpAccountConfig(val *GcpAccountConfig) *NullableGcpAccountConfig {
	return &NullableGcpAccountConfig{value: val, isSet: true}
}

func (v NullableGcpAccountConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpAccountConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


