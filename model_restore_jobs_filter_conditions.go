/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the RestoreJobsFilterConditions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreJobsFilterConditions{}

// RestoreJobsFilterConditions Filter conditions. If omitted, no filtering is applied. 
type RestoreJobsFilterConditions struct {
	JobId *JobIdFilters `json:"jobId,omitempty"`
	SnapshotId *SnapshotIdFilters `json:"snapshotId,omitempty"`
	ProviderResourceId *ResourceIdFilters `json:"providerResourceId,omitempty"`
	RestoreType *RestoreJobTypeFilters `json:"restoreType,omitempty"`
}

// NewRestoreJobsFilterConditions instantiates a new RestoreJobsFilterConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreJobsFilterConditions() *RestoreJobsFilterConditions {
	this := RestoreJobsFilterConditions{}
	return &this
}

// NewRestoreJobsFilterConditionsWithDefaults instantiates a new RestoreJobsFilterConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreJobsFilterConditionsWithDefaults() *RestoreJobsFilterConditions {
	this := RestoreJobsFilterConditions{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *RestoreJobsFilterConditions) GetJobId() JobIdFilters {
	if o == nil || IsNil(o.JobId) {
		var ret JobIdFilters
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreJobsFilterConditions) GetJobIdOk() (*JobIdFilters, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *RestoreJobsFilterConditions) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given JobIdFilters and assigns it to the JobId field.
func (o *RestoreJobsFilterConditions) SetJobId(v JobIdFilters) {
	o.JobId = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *RestoreJobsFilterConditions) GetSnapshotId() SnapshotIdFilters {
	if o == nil || IsNil(o.SnapshotId) {
		var ret SnapshotIdFilters
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreJobsFilterConditions) GetSnapshotIdOk() (*SnapshotIdFilters, bool) {
	if o == nil || IsNil(o.SnapshotId) {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *RestoreJobsFilterConditions) HasSnapshotId() bool {
	if o != nil && !IsNil(o.SnapshotId) {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given SnapshotIdFilters and assigns it to the SnapshotId field.
func (o *RestoreJobsFilterConditions) SetSnapshotId(v SnapshotIdFilters) {
	o.SnapshotId = &v
}

// GetProviderResourceId returns the ProviderResourceId field value if set, zero value otherwise.
func (o *RestoreJobsFilterConditions) GetProviderResourceId() ResourceIdFilters {
	if o == nil || IsNil(o.ProviderResourceId) {
		var ret ResourceIdFilters
		return ret
	}
	return *o.ProviderResourceId
}

// GetProviderResourceIdOk returns a tuple with the ProviderResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreJobsFilterConditions) GetProviderResourceIdOk() (*ResourceIdFilters, bool) {
	if o == nil || IsNil(o.ProviderResourceId) {
		return nil, false
	}
	return o.ProviderResourceId, true
}

// HasProviderResourceId returns a boolean if a field has been set.
func (o *RestoreJobsFilterConditions) HasProviderResourceId() bool {
	if o != nil && !IsNil(o.ProviderResourceId) {
		return true
	}

	return false
}

// SetProviderResourceId gets a reference to the given ResourceIdFilters and assigns it to the ProviderResourceId field.
func (o *RestoreJobsFilterConditions) SetProviderResourceId(v ResourceIdFilters) {
	o.ProviderResourceId = &v
}

// GetRestoreType returns the RestoreType field value if set, zero value otherwise.
func (o *RestoreJobsFilterConditions) GetRestoreType() RestoreJobTypeFilters {
	if o == nil || IsNil(o.RestoreType) {
		var ret RestoreJobTypeFilters
		return ret
	}
	return *o.RestoreType
}

// GetRestoreTypeOk returns a tuple with the RestoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreJobsFilterConditions) GetRestoreTypeOk() (*RestoreJobTypeFilters, bool) {
	if o == nil || IsNil(o.RestoreType) {
		return nil, false
	}
	return o.RestoreType, true
}

// HasRestoreType returns a boolean if a field has been set.
func (o *RestoreJobsFilterConditions) HasRestoreType() bool {
	if o != nil && !IsNil(o.RestoreType) {
		return true
	}

	return false
}

// SetRestoreType gets a reference to the given RestoreJobTypeFilters and assigns it to the RestoreType field.
func (o *RestoreJobsFilterConditions) SetRestoreType(v RestoreJobTypeFilters) {
	o.RestoreType = &v
}

func (o RestoreJobsFilterConditions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreJobsFilterConditions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["jobId"] = o.JobId
	}
	if !IsNil(o.SnapshotId) {
		toSerialize["snapshotId"] = o.SnapshotId
	}
	if !IsNil(o.ProviderResourceId) {
		toSerialize["providerResourceId"] = o.ProviderResourceId
	}
	if !IsNil(o.RestoreType) {
		toSerialize["restoreType"] = o.RestoreType
	}
	return toSerialize, nil
}

type NullableRestoreJobsFilterConditions struct {
	value *RestoreJobsFilterConditions
	isSet bool
}

func (v NullableRestoreJobsFilterConditions) Get() *RestoreJobsFilterConditions {
	return v.value
}

func (v *NullableRestoreJobsFilterConditions) Set(val *RestoreJobsFilterConditions) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreJobsFilterConditions) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreJobsFilterConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreJobsFilterConditions(val *RestoreJobsFilterConditions) *NullableRestoreJobsFilterConditions {
	return &NullableRestoreJobsFilterConditions{value: val, isSet: true}
}

func (v NullableRestoreJobsFilterConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreJobsFilterConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


