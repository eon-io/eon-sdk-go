/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the BackupJobsFilterConditions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupJobsFilterConditions{}

// BackupJobsFilterConditions struct for BackupJobsFilterConditions
type BackupJobsFilterConditions struct {
	JobId *JobIdFilters `json:"jobId,omitempty"`
	SnapshotId *SnapshotIdFilters `json:"snapshotId,omitempty"`
	ProviderResourceId *ResourceIdFilters `json:"providerResourceId,omitempty"`
	BackupType *BackupJobTypeFilters `json:"backupType,omitempty"`
}

// NewBackupJobsFilterConditions instantiates a new BackupJobsFilterConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobsFilterConditions() *BackupJobsFilterConditions {
	this := BackupJobsFilterConditions{}
	return &this
}

// NewBackupJobsFilterConditionsWithDefaults instantiates a new BackupJobsFilterConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobsFilterConditionsWithDefaults() *BackupJobsFilterConditions {
	this := BackupJobsFilterConditions{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *BackupJobsFilterConditions) GetJobId() JobIdFilters {
	if o == nil || IsNil(o.JobId) {
		var ret JobIdFilters
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobsFilterConditions) GetJobIdOk() (*JobIdFilters, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *BackupJobsFilterConditions) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given JobIdFilters and assigns it to the JobId field.
func (o *BackupJobsFilterConditions) SetJobId(v JobIdFilters) {
	o.JobId = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *BackupJobsFilterConditions) GetSnapshotId() SnapshotIdFilters {
	if o == nil || IsNil(o.SnapshotId) {
		var ret SnapshotIdFilters
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobsFilterConditions) GetSnapshotIdOk() (*SnapshotIdFilters, bool) {
	if o == nil || IsNil(o.SnapshotId) {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *BackupJobsFilterConditions) HasSnapshotId() bool {
	if o != nil && !IsNil(o.SnapshotId) {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given SnapshotIdFilters and assigns it to the SnapshotId field.
func (o *BackupJobsFilterConditions) SetSnapshotId(v SnapshotIdFilters) {
	o.SnapshotId = &v
}

// GetProviderResourceId returns the ProviderResourceId field value if set, zero value otherwise.
func (o *BackupJobsFilterConditions) GetProviderResourceId() ResourceIdFilters {
	if o == nil || IsNil(o.ProviderResourceId) {
		var ret ResourceIdFilters
		return ret
	}
	return *o.ProviderResourceId
}

// GetProviderResourceIdOk returns a tuple with the ProviderResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobsFilterConditions) GetProviderResourceIdOk() (*ResourceIdFilters, bool) {
	if o == nil || IsNil(o.ProviderResourceId) {
		return nil, false
	}
	return o.ProviderResourceId, true
}

// HasProviderResourceId returns a boolean if a field has been set.
func (o *BackupJobsFilterConditions) HasProviderResourceId() bool {
	if o != nil && !IsNil(o.ProviderResourceId) {
		return true
	}

	return false
}

// SetProviderResourceId gets a reference to the given ResourceIdFilters and assigns it to the ProviderResourceId field.
func (o *BackupJobsFilterConditions) SetProviderResourceId(v ResourceIdFilters) {
	o.ProviderResourceId = &v
}

// GetBackupType returns the BackupType field value if set, zero value otherwise.
func (o *BackupJobsFilterConditions) GetBackupType() BackupJobTypeFilters {
	if o == nil || IsNil(o.BackupType) {
		var ret BackupJobTypeFilters
		return ret
	}
	return *o.BackupType
}

// GetBackupTypeOk returns a tuple with the BackupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupJobsFilterConditions) GetBackupTypeOk() (*BackupJobTypeFilters, bool) {
	if o == nil || IsNil(o.BackupType) {
		return nil, false
	}
	return o.BackupType, true
}

// HasBackupType returns a boolean if a field has been set.
func (o *BackupJobsFilterConditions) HasBackupType() bool {
	if o != nil && !IsNil(o.BackupType) {
		return true
	}

	return false
}

// SetBackupType gets a reference to the given BackupJobTypeFilters and assigns it to the BackupType field.
func (o *BackupJobsFilterConditions) SetBackupType(v BackupJobTypeFilters) {
	o.BackupType = &v
}

func (o BackupJobsFilterConditions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupJobsFilterConditions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["jobId"] = o.JobId
	}
	if !IsNil(o.SnapshotId) {
		toSerialize["snapshotId"] = o.SnapshotId
	}
	if !IsNil(o.ProviderResourceId) {
		toSerialize["providerResourceId"] = o.ProviderResourceId
	}
	if !IsNil(o.BackupType) {
		toSerialize["backupType"] = o.BackupType
	}
	return toSerialize, nil
}

type NullableBackupJobsFilterConditions struct {
	value *BackupJobsFilterConditions
	isSet bool
}

func (v NullableBackupJobsFilterConditions) Get() *BackupJobsFilterConditions {
	return v.value
}

func (v *NullableBackupJobsFilterConditions) Set(val *BackupJobsFilterConditions) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobsFilterConditions) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobsFilterConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobsFilterConditions(val *BackupJobsFilterConditions) *NullableBackupJobsFilterConditions {
	return &NullableBackupJobsFilterConditions{value: val, isSet: true}
}

func (v NullableBackupJobsFilterConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobsFilterConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


