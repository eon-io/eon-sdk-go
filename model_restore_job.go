/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestoreJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreJob{}

// RestoreJob struct for RestoreJob
type RestoreJob struct {
	JobExecutionDetails JobExecutionDetails `json:"jobExecutionDetails"`
	ResourceDetails NullableResourceDetails `json:"resourceDetails,omitempty"`
	SnapshotDetails NullableJobSnapshotDetails `json:"snapshotDetails,omitempty"`
	DestinationDetails DestinationDetails `json:"destinationDetails"`
	Vault NullableBackupVault `json:"vault,omitempty"`
	RestoreType RestoreJobType `json:"restoreType"`
}

type _RestoreJob RestoreJob

// NewRestoreJob instantiates a new RestoreJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreJob(jobExecutionDetails JobExecutionDetails, destinationDetails DestinationDetails, restoreType RestoreJobType) *RestoreJob {
	this := RestoreJob{}
	this.JobExecutionDetails = jobExecutionDetails
	this.DestinationDetails = destinationDetails
	this.RestoreType = restoreType
	return &this
}

// NewRestoreJobWithDefaults instantiates a new RestoreJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreJobWithDefaults() *RestoreJob {
	this := RestoreJob{}
	return &this
}

// GetJobExecutionDetails returns the JobExecutionDetails field value
func (o *RestoreJob) GetJobExecutionDetails() JobExecutionDetails {
	if o == nil {
		var ret JobExecutionDetails
		return ret
	}

	return o.JobExecutionDetails
}

// GetJobExecutionDetailsOk returns a tuple with the JobExecutionDetails field value
// and a boolean to check if the value has been set.
func (o *RestoreJob) GetJobExecutionDetailsOk() (*JobExecutionDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobExecutionDetails, true
}

// SetJobExecutionDetails sets field value
func (o *RestoreJob) SetJobExecutionDetails(v JobExecutionDetails) {
	o.JobExecutionDetails = v
}

// GetResourceDetails returns the ResourceDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreJob) GetResourceDetails() ResourceDetails {
	if o == nil || IsNil(o.ResourceDetails.Get()) {
		var ret ResourceDetails
		return ret
	}
	return *o.ResourceDetails.Get()
}

// GetResourceDetailsOk returns a tuple with the ResourceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreJob) GetResourceDetailsOk() (*ResourceDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceDetails.Get(), o.ResourceDetails.IsSet()
}

// HasResourceDetails returns a boolean if a field has been set.
func (o *RestoreJob) HasResourceDetails() bool {
	if o != nil && o.ResourceDetails.IsSet() {
		return true
	}

	return false
}

// SetResourceDetails gets a reference to the given NullableResourceDetails and assigns it to the ResourceDetails field.
func (o *RestoreJob) SetResourceDetails(v ResourceDetails) {
	o.ResourceDetails.Set(&v)
}
// SetResourceDetailsNil sets the value for ResourceDetails to be an explicit nil
func (o *RestoreJob) SetResourceDetailsNil() {
	o.ResourceDetails.Set(nil)
}

// UnsetResourceDetails ensures that no value is present for ResourceDetails, not even an explicit nil
func (o *RestoreJob) UnsetResourceDetails() {
	o.ResourceDetails.Unset()
}

// GetSnapshotDetails returns the SnapshotDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreJob) GetSnapshotDetails() JobSnapshotDetails {
	if o == nil || IsNil(o.SnapshotDetails.Get()) {
		var ret JobSnapshotDetails
		return ret
	}
	return *o.SnapshotDetails.Get()
}

// GetSnapshotDetailsOk returns a tuple with the SnapshotDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreJob) GetSnapshotDetailsOk() (*JobSnapshotDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotDetails.Get(), o.SnapshotDetails.IsSet()
}

// HasSnapshotDetails returns a boolean if a field has been set.
func (o *RestoreJob) HasSnapshotDetails() bool {
	if o != nil && o.SnapshotDetails.IsSet() {
		return true
	}

	return false
}

// SetSnapshotDetails gets a reference to the given NullableJobSnapshotDetails and assigns it to the SnapshotDetails field.
func (o *RestoreJob) SetSnapshotDetails(v JobSnapshotDetails) {
	o.SnapshotDetails.Set(&v)
}
// SetSnapshotDetailsNil sets the value for SnapshotDetails to be an explicit nil
func (o *RestoreJob) SetSnapshotDetailsNil() {
	o.SnapshotDetails.Set(nil)
}

// UnsetSnapshotDetails ensures that no value is present for SnapshotDetails, not even an explicit nil
func (o *RestoreJob) UnsetSnapshotDetails() {
	o.SnapshotDetails.Unset()
}

// GetDestinationDetails returns the DestinationDetails field value
func (o *RestoreJob) GetDestinationDetails() DestinationDetails {
	if o == nil {
		var ret DestinationDetails
		return ret
	}

	return o.DestinationDetails
}

// GetDestinationDetailsOk returns a tuple with the DestinationDetails field value
// and a boolean to check if the value has been set.
func (o *RestoreJob) GetDestinationDetailsOk() (*DestinationDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationDetails, true
}

// SetDestinationDetails sets field value
func (o *RestoreJob) SetDestinationDetails(v DestinationDetails) {
	o.DestinationDetails = v
}

// GetVault returns the Vault field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreJob) GetVault() BackupVault {
	if o == nil || IsNil(o.Vault.Get()) {
		var ret BackupVault
		return ret
	}
	return *o.Vault.Get()
}

// GetVaultOk returns a tuple with the Vault field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreJob) GetVaultOk() (*BackupVault, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vault.Get(), o.Vault.IsSet()
}

// HasVault returns a boolean if a field has been set.
func (o *RestoreJob) HasVault() bool {
	if o != nil && o.Vault.IsSet() {
		return true
	}

	return false
}

// SetVault gets a reference to the given NullableBackupVault and assigns it to the Vault field.
func (o *RestoreJob) SetVault(v BackupVault) {
	o.Vault.Set(&v)
}
// SetVaultNil sets the value for Vault to be an explicit nil
func (o *RestoreJob) SetVaultNil() {
	o.Vault.Set(nil)
}

// UnsetVault ensures that no value is present for Vault, not even an explicit nil
func (o *RestoreJob) UnsetVault() {
	o.Vault.Unset()
}

// GetRestoreType returns the RestoreType field value
func (o *RestoreJob) GetRestoreType() RestoreJobType {
	if o == nil {
		var ret RestoreJobType
		return ret
	}

	return o.RestoreType
}

// GetRestoreTypeOk returns a tuple with the RestoreType field value
// and a boolean to check if the value has been set.
func (o *RestoreJob) GetRestoreTypeOk() (*RestoreJobType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreType, true
}

// SetRestoreType sets field value
func (o *RestoreJob) SetRestoreType(v RestoreJobType) {
	o.RestoreType = v
}

func (o RestoreJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jobExecutionDetails"] = o.JobExecutionDetails
	if o.ResourceDetails.IsSet() {
		toSerialize["resourceDetails"] = o.ResourceDetails.Get()
	}
	if o.SnapshotDetails.IsSet() {
		toSerialize["snapshotDetails"] = o.SnapshotDetails.Get()
	}
	toSerialize["destinationDetails"] = o.DestinationDetails
	if o.Vault.IsSet() {
		toSerialize["vault"] = o.Vault.Get()
	}
	toSerialize["restoreType"] = o.RestoreType
	return toSerialize, nil
}

func (o *RestoreJob) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jobExecutionDetails",
		"destinationDetails",
		"restoreType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestoreJob := _RestoreJob{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// Allow unknown fields to handle API schema differences
	// // Allow unknown fields to handle API schema differences
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestoreJob)

	if err != nil {
		return err
	}

	*o = RestoreJob(varRestoreJob)

	return err
}

type NullableRestoreJob struct {
	value *RestoreJob
	isSet bool
}

func (v NullableRestoreJob) Get() *RestoreJob {
	return v.value
}

func (v *NullableRestoreJob) Set(val *RestoreJob) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreJob) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreJob(val *RestoreJob) *NullableRestoreJob {
	return &NullableRestoreJob{value: val, isSet: true}
}

func (v NullableRestoreJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


