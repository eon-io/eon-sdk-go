/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the AccountConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountConfig{}

// AccountConfig struct for AccountConfig
type AccountConfig struct {
	CloudProvider *Provider `json:"cloudProvider,omitempty"`
	Aws NullableAwsAccountConfig `json:"aws,omitempty"`
	Gcp NullableGcpAccountConfig `json:"gcp,omitempty"`
	Azure NullableAzureAccountConfig `json:"azure,omitempty"`
}

// NewAccountConfig instantiates a new AccountConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountConfig() *AccountConfig {
	this := AccountConfig{}
	return &this
}

// NewAccountConfigWithDefaults instantiates a new AccountConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountConfigWithDefaults() *AccountConfig {
	this := AccountConfig{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *AccountConfig) GetCloudProvider() Provider {
	if o == nil || IsNil(o.CloudProvider) {
		var ret Provider
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfig) GetCloudProviderOk() (*Provider, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *AccountConfig) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given Provider and assigns it to the CloudProvider field.
func (o *AccountConfig) SetCloudProvider(v Provider) {
	o.CloudProvider = &v
}

// GetAws returns the Aws field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountConfig) GetAws() AwsAccountConfig {
	if o == nil || IsNil(o.Aws.Get()) {
		var ret AwsAccountConfig
		return ret
	}
	return *o.Aws.Get()
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountConfig) GetAwsOk() (*AwsAccountConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aws.Get(), o.Aws.IsSet()
}

// HasAws returns a boolean if a field has been set.
func (o *AccountConfig) HasAws() bool {
	if o != nil && o.Aws.IsSet() {
		return true
	}

	return false
}

// SetAws gets a reference to the given NullableAwsAccountConfig and assigns it to the Aws field.
func (o *AccountConfig) SetAws(v AwsAccountConfig) {
	o.Aws.Set(&v)
}
// SetAwsNil sets the value for Aws to be an explicit nil
func (o *AccountConfig) SetAwsNil() {
	o.Aws.Set(nil)
}

// UnsetAws ensures that no value is present for Aws, not even an explicit nil
func (o *AccountConfig) UnsetAws() {
	o.Aws.Unset()
}

// GetGcp returns the Gcp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountConfig) GetGcp() GcpAccountConfig {
	if o == nil || IsNil(o.Gcp.Get()) {
		var ret GcpAccountConfig
		return ret
	}
	return *o.Gcp.Get()
}

// GetGcpOk returns a tuple with the Gcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountConfig) GetGcpOk() (*GcpAccountConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gcp.Get(), o.Gcp.IsSet()
}

// HasGcp returns a boolean if a field has been set.
func (o *AccountConfig) HasGcp() bool {
	if o != nil && o.Gcp.IsSet() {
		return true
	}

	return false
}

// SetGcp gets a reference to the given NullableGcpAccountConfig and assigns it to the Gcp field.
func (o *AccountConfig) SetGcp(v GcpAccountConfig) {
	o.Gcp.Set(&v)
}
// SetGcpNil sets the value for Gcp to be an explicit nil
func (o *AccountConfig) SetGcpNil() {
	o.Gcp.Set(nil)
}

// UnsetGcp ensures that no value is present for Gcp, not even an explicit nil
func (o *AccountConfig) UnsetGcp() {
	o.Gcp.Unset()
}

// GetAzure returns the Azure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountConfig) GetAzure() AzureAccountConfig {
	if o == nil || IsNil(o.Azure.Get()) {
		var ret AzureAccountConfig
		return ret
	}
	return *o.Azure.Get()
}

// GetAzureOk returns a tuple with the Azure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountConfig) GetAzureOk() (*AzureAccountConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Azure.Get(), o.Azure.IsSet()
}

// HasAzure returns a boolean if a field has been set.
func (o *AccountConfig) HasAzure() bool {
	if o != nil && o.Azure.IsSet() {
		return true
	}

	return false
}

// SetAzure gets a reference to the given NullableAzureAccountConfig and assigns it to the Azure field.
func (o *AccountConfig) SetAzure(v AzureAccountConfig) {
	o.Azure.Set(&v)
}
// SetAzureNil sets the value for Azure to be an explicit nil
func (o *AccountConfig) SetAzureNil() {
	o.Azure.Set(nil)
}

// UnsetAzure ensures that no value is present for Azure, not even an explicit nil
func (o *AccountConfig) UnsetAzure() {
	o.Azure.Unset()
}

func (o AccountConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if o.Aws.IsSet() {
		toSerialize["aws"] = o.Aws.Get()
	}
	if o.Gcp.IsSet() {
		toSerialize["gcp"] = o.Gcp.Get()
	}
	if o.Azure.IsSet() {
		toSerialize["azure"] = o.Azure.Get()
	}
	return toSerialize, nil
}

type NullableAccountConfig struct {
	value *AccountConfig
	isSet bool
}

func (v NullableAccountConfig) Get() *AccountConfig {
	return v.value
}

func (v *NullableAccountConfig) Set(val *AccountConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountConfig(val *AccountConfig) *NullableAccountConfig {
	return &NullableAccountConfig{value: val, isSet: true}
}

func (v NullableAccountConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


