/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the EbsSnapshotRestoreDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EbsSnapshotRestoreDestination{}

// EbsSnapshotRestoreDestination struct for EbsSnapshotRestoreDestination
type EbsSnapshotRestoreDestination struct {
	AwsEbs *EbsSnapshotTarget `json:"awsEbs,omitempty"`
}

// NewEbsSnapshotRestoreDestination instantiates a new EbsSnapshotRestoreDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEbsSnapshotRestoreDestination() *EbsSnapshotRestoreDestination {
	this := EbsSnapshotRestoreDestination{}
	return &this
}

// NewEbsSnapshotRestoreDestinationWithDefaults instantiates a new EbsSnapshotRestoreDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEbsSnapshotRestoreDestinationWithDefaults() *EbsSnapshotRestoreDestination {
	this := EbsSnapshotRestoreDestination{}
	return &this
}

// GetAwsEbs returns the AwsEbs field value if set, zero value otherwise.
func (o *EbsSnapshotRestoreDestination) GetAwsEbs() EbsSnapshotTarget {
	if o == nil || IsNil(o.AwsEbs) {
		var ret EbsSnapshotTarget
		return ret
	}
	return *o.AwsEbs
}

// GetAwsEbsOk returns a tuple with the AwsEbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EbsSnapshotRestoreDestination) GetAwsEbsOk() (*EbsSnapshotTarget, bool) {
	if o == nil || IsNil(o.AwsEbs) {
		return nil, false
	}
	return o.AwsEbs, true
}

// HasAwsEbs returns a boolean if a field has been set.
func (o *EbsSnapshotRestoreDestination) HasAwsEbs() bool {
	if o != nil && !IsNil(o.AwsEbs) {
		return true
	}

	return false
}

// SetAwsEbs gets a reference to the given EbsSnapshotTarget and assigns it to the AwsEbs field.
func (o *EbsSnapshotRestoreDestination) SetAwsEbs(v EbsSnapshotTarget) {
	o.AwsEbs = &v
}

func (o EbsSnapshotRestoreDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EbsSnapshotRestoreDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsEbs) {
		toSerialize["awsEbs"] = o.AwsEbs
	}
	return toSerialize, nil
}

type NullableEbsSnapshotRestoreDestination struct {
	value *EbsSnapshotRestoreDestination
	isSet bool
}

func (v NullableEbsSnapshotRestoreDestination) Get() *EbsSnapshotRestoreDestination {
	return v.value
}

func (v *NullableEbsSnapshotRestoreDestination) Set(val *EbsSnapshotRestoreDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableEbsSnapshotRestoreDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableEbsSnapshotRestoreDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEbsSnapshotRestoreDestination(val *EbsSnapshotRestoreDestination) *NullableEbsSnapshotRestoreDestination {
	return &NullableEbsSnapshotRestoreDestination{value: val, isSet: true}
}

func (v NullableEbsSnapshotRestoreDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEbsSnapshotRestoreDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


