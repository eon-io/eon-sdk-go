/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountVersion{}

// AccountVersion struct for AccountVersion
type AccountVersion struct {
	// The version of the account that is installed.
	Installed string `json:"installed"`
	InstallationMethod *AccountInstallationMethod `json:"installationMethod,omitempty"`
	// The latest version of the role available for the account
	Latest *string `json:"latest,omitempty"`
}

type _AccountVersion AccountVersion

// NewAccountVersion instantiates a new AccountVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountVersion(installed string) *AccountVersion {
	this := AccountVersion{}
	this.Installed = installed
	var installationMethod AccountInstallationMethod = ACCOUNT_INSTALLATION_METHOD_UNSPECIFIED
	this.InstallationMethod = &installationMethod
	return &this
}

// NewAccountVersionWithDefaults instantiates a new AccountVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountVersionWithDefaults() *AccountVersion {
	this := AccountVersion{}
	var installationMethod AccountInstallationMethod = ACCOUNT_INSTALLATION_METHOD_UNSPECIFIED
	this.InstallationMethod = &installationMethod
	return &this
}

// GetInstalled returns the Installed field value
func (o *AccountVersion) GetInstalled() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Installed
}

// GetInstalledOk returns a tuple with the Installed field value
// and a boolean to check if the value has been set.
func (o *AccountVersion) GetInstalledOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Installed, true
}

// SetInstalled sets field value
func (o *AccountVersion) SetInstalled(v string) {
	o.Installed = v
}

// GetInstallationMethod returns the InstallationMethod field value if set, zero value otherwise.
func (o *AccountVersion) GetInstallationMethod() AccountInstallationMethod {
	if o == nil || IsNil(o.InstallationMethod) {
		var ret AccountInstallationMethod
		return ret
	}
	return *o.InstallationMethod
}

// GetInstallationMethodOk returns a tuple with the InstallationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountVersion) GetInstallationMethodOk() (*AccountInstallationMethod, bool) {
	if o == nil || IsNil(o.InstallationMethod) {
		return nil, false
	}
	return o.InstallationMethod, true
}

// HasInstallationMethod returns a boolean if a field has been set.
func (o *AccountVersion) HasInstallationMethod() bool {
	if o != nil && !IsNil(o.InstallationMethod) {
		return true
	}

	return false
}

// SetInstallationMethod gets a reference to the given AccountInstallationMethod and assigns it to the InstallationMethod field.
func (o *AccountVersion) SetInstallationMethod(v AccountInstallationMethod) {
	o.InstallationMethod = &v
}

// GetLatest returns the Latest field value if set, zero value otherwise.
func (o *AccountVersion) GetLatest() string {
	if o == nil || IsNil(o.Latest) {
		var ret string
		return ret
	}
	return *o.Latest
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountVersion) GetLatestOk() (*string, bool) {
	if o == nil || IsNil(o.Latest) {
		return nil, false
	}
	return o.Latest, true
}

// HasLatest returns a boolean if a field has been set.
func (o *AccountVersion) HasLatest() bool {
	if o != nil && !IsNil(o.Latest) {
		return true
	}

	return false
}

// SetLatest gets a reference to the given string and assigns it to the Latest field.
func (o *AccountVersion) SetLatest(v string) {
	o.Latest = &v
}

func (o AccountVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["installed"] = o.Installed
	if !IsNil(o.InstallationMethod) {
		toSerialize["installationMethod"] = o.InstallationMethod
	}
	if !IsNil(o.Latest) {
		toSerialize["latest"] = o.Latest
	}
	return toSerialize, nil
}

func (o *AccountVersion) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"installed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountVersion := _AccountVersion{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountVersion)

	if err != nil {
		return err
	}

	*o = AccountVersion(varAccountVersion)

	return err
}

type NullableAccountVersion struct {
	value *AccountVersion
	isSet bool
}

func (v NullableAccountVersion) Get() *AccountVersion {
	return v.value
}

func (v *NullableAccountVersion) Set(val *AccountVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountVersion(val *AccountVersion) *NullableAccountVersion {
	return &NullableAccountVersion{value: val, isSet: true}
}

func (v NullableAccountVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


