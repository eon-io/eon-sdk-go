/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the EbsRestoreDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EbsRestoreDestination{}

// EbsRestoreDestination struct for EbsRestoreDestination
type EbsRestoreDestination struct {
	AwsEbs *EbsTarget `json:"awsEbs,omitempty"`
}

// NewEbsRestoreDestination instantiates a new EbsRestoreDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEbsRestoreDestination() *EbsRestoreDestination {
	this := EbsRestoreDestination{}
	return &this
}

// NewEbsRestoreDestinationWithDefaults instantiates a new EbsRestoreDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEbsRestoreDestinationWithDefaults() *EbsRestoreDestination {
	this := EbsRestoreDestination{}
	return &this
}

// GetAwsEbs returns the AwsEbs field value if set, zero value otherwise.
func (o *EbsRestoreDestination) GetAwsEbs() EbsTarget {
	if o == nil || IsNil(o.AwsEbs) {
		var ret EbsTarget
		return ret
	}
	return *o.AwsEbs
}

// GetAwsEbsOk returns a tuple with the AwsEbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EbsRestoreDestination) GetAwsEbsOk() (*EbsTarget, bool) {
	if o == nil || IsNil(o.AwsEbs) {
		return nil, false
	}
	return o.AwsEbs, true
}

// HasAwsEbs returns a boolean if a field has been set.
func (o *EbsRestoreDestination) HasAwsEbs() bool {
	if o != nil && !IsNil(o.AwsEbs) {
		return true
	}

	return false
}

// SetAwsEbs gets a reference to the given EbsTarget and assigns it to the AwsEbs field.
func (o *EbsRestoreDestination) SetAwsEbs(v EbsTarget) {
	o.AwsEbs = &v
}

func (o EbsRestoreDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EbsRestoreDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsEbs) {
		toSerialize["awsEbs"] = o.AwsEbs
	}
	return toSerialize, nil
}

type NullableEbsRestoreDestination struct {
	value *EbsRestoreDestination
	isSet bool
}

func (v NullableEbsRestoreDestination) Get() *EbsRestoreDestination {
	return v.value
}

func (v *NullableEbsRestoreDestination) Set(val *EbsRestoreDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableEbsRestoreDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableEbsRestoreDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEbsRestoreDestination(val *EbsRestoreDestination) *NullableEbsRestoreDestination {
	return &NullableEbsRestoreDestination{value: val, isSet: true}
}

func (v NullableEbsRestoreDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEbsRestoreDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


