/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the Oauth2TokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Oauth2TokenResponse{}

// Oauth2TokenResponse struct for Oauth2TokenResponse
type Oauth2TokenResponse struct {
	// Access token, which you pass in the `Authorization` header when calling API methods.
	AccessToken *string `json:"access_token,omitempty"`
	// Type of the token, which is always `Bearer`.
	TokenType *string `json:"token_type,omitempty"`
	// Length of time until the token expires, in seconds. Default: `43200` (12 hours). 
	ExpiresIn *int32 `json:"expires_in,omitempty"`
}

// NewOauth2TokenResponse instantiates a new Oauth2TokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOauth2TokenResponse() *Oauth2TokenResponse {
	this := Oauth2TokenResponse{}
	return &this
}

// NewOauth2TokenResponseWithDefaults instantiates a new Oauth2TokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOauth2TokenResponseWithDefaults() *Oauth2TokenResponse {
	this := Oauth2TokenResponse{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *Oauth2TokenResponse) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Oauth2TokenResponse) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *Oauth2TokenResponse) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *Oauth2TokenResponse) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *Oauth2TokenResponse) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Oauth2TokenResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *Oauth2TokenResponse) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *Oauth2TokenResponse) SetTokenType(v string) {
	o.TokenType = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *Oauth2TokenResponse) GetExpiresIn() int32 {
	if o == nil || IsNil(o.ExpiresIn) {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Oauth2TokenResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *Oauth2TokenResponse) HasExpiresIn() bool {
	if o != nil && !IsNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *Oauth2TokenResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

func (o Oauth2TokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Oauth2TokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.TokenType) {
		toSerialize["token_type"] = o.TokenType
	}
	if !IsNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	return toSerialize, nil
}

type NullableOauth2TokenResponse struct {
	value *Oauth2TokenResponse
	isSet bool
}

func (v NullableOauth2TokenResponse) Get() *Oauth2TokenResponse {
	return v.value
}

func (v *NullableOauth2TokenResponse) Set(val *Oauth2TokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOauth2TokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOauth2TokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOauth2TokenResponse(val *Oauth2TokenResponse) *NullableOauth2TokenResponse {
	return &NullableOauth2TokenResponse{value: val, isSet: true}
}

func (v NullableOauth2TokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOauth2TokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


