/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"fmt"
)

// BackupJobSortField Field to sort by.
type BackupJobSortField string

// List of BackupJobSortField
const (
	BACKUP_JOB_SORT_CREATED_TIME BackupJobSortField = "createdTime"
	BACKUP_JOB_SORT_START_TIME BackupJobSortField = "startTime"
	BACKUP_JOB_SORT_END_TIME BackupJobSortField = "endTime"
)

// All allowed values of BackupJobSortField enum
var AllowedBackupJobSortFieldEnumValues = []BackupJobSortField{
	"createdTime",
	"startTime",
	"endTime",
}

func (v *BackupJobSortField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BackupJobSortField(value)
	for _, existing := range AllowedBackupJobSortFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BackupJobSortField", value)
}

// NewBackupJobSortFieldFromValue returns a pointer to a valid BackupJobSortField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBackupJobSortFieldFromValue(v string) (*BackupJobSortField, error) {
	ev := BackupJobSortField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BackupJobSortField: valid values are %v", v, AllowedBackupJobSortFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BackupJobSortField) IsValid() bool {
	for _, existing := range AllowedBackupJobSortFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BackupJobSortField value
func (v BackupJobSortField) Ptr() *BackupJobSortField {
	return &v
}

type NullableBackupJobSortField struct {
	value *BackupJobSortField
	isSet bool
}

func (v NullableBackupJobSortField) Get() *BackupJobSortField {
	return v.value
}

func (v *NullableBackupJobSortField) Set(val *BackupJobSortField) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobSortField) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobSortField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobSortField(val *BackupJobSortField) *NullableBackupJobSortField {
	return &NullableBackupJobSortField{value: val, isSet: true}
}

func (v NullableBackupJobSortField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobSortField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

