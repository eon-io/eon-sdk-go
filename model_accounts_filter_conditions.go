/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the AccountsFilterConditions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountsFilterConditions{}

// AccountsFilterConditions Filter conditions. If omitted, no filtering is applied. 
type AccountsFilterConditions struct {
	Id *IdFilters `json:"id,omitempty"`
	ProviderAccountId *ProviderAccountIdFilters `json:"providerAccountId,omitempty"`
}

// NewAccountsFilterConditions instantiates a new AccountsFilterConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountsFilterConditions() *AccountsFilterConditions {
	this := AccountsFilterConditions{}
	return &this
}

// NewAccountsFilterConditionsWithDefaults instantiates a new AccountsFilterConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountsFilterConditionsWithDefaults() *AccountsFilterConditions {
	this := AccountsFilterConditions{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountsFilterConditions) GetId() IdFilters {
	if o == nil || IsNil(o.Id) {
		var ret IdFilters
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountsFilterConditions) GetIdOk() (*IdFilters, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountsFilterConditions) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given IdFilters and assigns it to the Id field.
func (o *AccountsFilterConditions) SetId(v IdFilters) {
	o.Id = &v
}

// GetProviderAccountId returns the ProviderAccountId field value if set, zero value otherwise.
func (o *AccountsFilterConditions) GetProviderAccountId() ProviderAccountIdFilters {
	if o == nil || IsNil(o.ProviderAccountId) {
		var ret ProviderAccountIdFilters
		return ret
	}
	return *o.ProviderAccountId
}

// GetProviderAccountIdOk returns a tuple with the ProviderAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountsFilterConditions) GetProviderAccountIdOk() (*ProviderAccountIdFilters, bool) {
	if o == nil || IsNil(o.ProviderAccountId) {
		return nil, false
	}
	return o.ProviderAccountId, true
}

// HasProviderAccountId returns a boolean if a field has been set.
func (o *AccountsFilterConditions) HasProviderAccountId() bool {
	if o != nil && !IsNil(o.ProviderAccountId) {
		return true
	}

	return false
}

// SetProviderAccountId gets a reference to the given ProviderAccountIdFilters and assigns it to the ProviderAccountId field.
func (o *AccountsFilterConditions) SetProviderAccountId(v ProviderAccountIdFilters) {
	o.ProviderAccountId = &v
}

func (o AccountsFilterConditions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountsFilterConditions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProviderAccountId) {
		toSerialize["providerAccountId"] = o.ProviderAccountId
	}
	return toSerialize, nil
}

type NullableAccountsFilterConditions struct {
	value *AccountsFilterConditions
	isSet bool
}

func (v NullableAccountsFilterConditions) Get() *AccountsFilterConditions {
	return v.value
}

func (v *NullableAccountsFilterConditions) Set(val *AccountsFilterConditions) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountsFilterConditions) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountsFilterConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountsFilterConditions(val *AccountsFilterConditions) *NullableAccountsFilterConditions {
	return &NullableAccountsFilterConditions{value: val, isSet: true}
}

func (v NullableAccountsFilterConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountsFilterConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


