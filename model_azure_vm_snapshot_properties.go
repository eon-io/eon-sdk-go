/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the AzureVmSnapshotProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVmSnapshotProperties{}

// AzureVmSnapshotProperties Properties of the original Azure Virtual Machine instance at the time the snapshot was taken. Present only when `resourceType` is set to `AZURE_VIRTUAL_MACHINE`. 
type AzureVmSnapshotProperties struct {
	// The name of the resource
	Name *string `json:"name,omitempty"`
	// The size of the virtual machine
	SizeBytes *string `json:"sizeBytes,omitempty"`
	Disks []AzureDisk `json:"disks,omitempty"`
}

// NewAzureVmSnapshotProperties instantiates a new AzureVmSnapshotProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureVmSnapshotProperties() *AzureVmSnapshotProperties {
	this := AzureVmSnapshotProperties{}
	return &this
}

// NewAzureVmSnapshotPropertiesWithDefaults instantiates a new AzureVmSnapshotProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVmSnapshotPropertiesWithDefaults() *AzureVmSnapshotProperties {
	this := AzureVmSnapshotProperties{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AzureVmSnapshotProperties) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVmSnapshotProperties) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AzureVmSnapshotProperties) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AzureVmSnapshotProperties) SetName(v string) {
	o.Name = &v
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise.
func (o *AzureVmSnapshotProperties) GetSizeBytes() string {
	if o == nil || IsNil(o.SizeBytes) {
		var ret string
		return ret
	}
	return *o.SizeBytes
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVmSnapshotProperties) GetSizeBytesOk() (*string, bool) {
	if o == nil || IsNil(o.SizeBytes) {
		return nil, false
	}
	return o.SizeBytes, true
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *AzureVmSnapshotProperties) HasSizeBytes() bool {
	if o != nil && !IsNil(o.SizeBytes) {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given string and assigns it to the SizeBytes field.
func (o *AzureVmSnapshotProperties) SetSizeBytes(v string) {
	o.SizeBytes = &v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *AzureVmSnapshotProperties) GetDisks() []AzureDisk {
	if o == nil || IsNil(o.Disks) {
		var ret []AzureDisk
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVmSnapshotProperties) GetDisksOk() ([]AzureDisk, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *AzureVmSnapshotProperties) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []AzureDisk and assigns it to the Disks field.
func (o *AzureVmSnapshotProperties) SetDisks(v []AzureDisk) {
	o.Disks = v
}

func (o AzureVmSnapshotProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVmSnapshotProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SizeBytes) {
		toSerialize["sizeBytes"] = o.SizeBytes
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	return toSerialize, nil
}

type NullableAzureVmSnapshotProperties struct {
	value *AzureVmSnapshotProperties
	isSet bool
}

func (v NullableAzureVmSnapshotProperties) Get() *AzureVmSnapshotProperties {
	return v.value
}

func (v *NullableAzureVmSnapshotProperties) Set(val *AzureVmSnapshotProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVmSnapshotProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVmSnapshotProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVmSnapshotProperties(val *AzureVmSnapshotProperties) *NullableAzureVmSnapshotProperties {
	return &NullableAzureVmSnapshotProperties{value: val, isSet: true}
}

func (v NullableAzureVmSnapshotProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVmSnapshotProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


