/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"fmt"
)

// SourceAccountSortField Field to sort by.
type SourceAccountSortField string

// List of SourceAccountSortField
const (
	SOURCE_ACCOUNT_SORT_ACCOUNT_NAME SourceAccountSortField = "accountName"
)

// All allowed values of SourceAccountSortField enum
var AllowedSourceAccountSortFieldEnumValues = []SourceAccountSortField{
	"accountName",
}

func (v *SourceAccountSortField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SourceAccountSortField(value)
	for _, existing := range AllowedSourceAccountSortFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SourceAccountSortField", value)
}

// NewSourceAccountSortFieldFromValue returns a pointer to a valid SourceAccountSortField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSourceAccountSortFieldFromValue(v string) (*SourceAccountSortField, error) {
	ev := SourceAccountSortField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SourceAccountSortField: valid values are %v", v, AllowedSourceAccountSortFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SourceAccountSortField) IsValid() bool {
	for _, existing := range AllowedSourceAccountSortFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SourceAccountSortField value
func (v SourceAccountSortField) Ptr() *SourceAccountSortField {
	return &v
}

type NullableSourceAccountSortField struct {
	value *SourceAccountSortField
	isSet bool
}

func (v NullableSourceAccountSortField) Get() *SourceAccountSortField {
	return v.value
}

func (v *NullableSourceAccountSortField) Set(val *SourceAccountSortField) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceAccountSortField) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceAccountSortField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceAccountSortField(val *SourceAccountSortField) *NullableSourceAccountSortField {
	return &NullableSourceAccountSortField{value: val, isSet: true}
}

func (v NullableSourceAccountSortField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceAccountSortField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

