/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the ListInventorySnapshotsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInventorySnapshotsRequest{}

// ListInventorySnapshotsRequest struct for ListInventorySnapshotsRequest
type ListInventorySnapshotsRequest struct {
	Filters *SnapshotFilterConditions `json:"filters,omitempty"`
	// List of sorting options. Sorting is applied in the order passed in the list. 
	Sorts []SortSnapshotsBy `json:"sorts,omitempty"`
}

// NewListInventorySnapshotsRequest instantiates a new ListInventorySnapshotsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInventorySnapshotsRequest() *ListInventorySnapshotsRequest {
	this := ListInventorySnapshotsRequest{}
	return &this
}

// NewListInventorySnapshotsRequestWithDefaults instantiates a new ListInventorySnapshotsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInventorySnapshotsRequestWithDefaults() *ListInventorySnapshotsRequest {
	this := ListInventorySnapshotsRequest{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ListInventorySnapshotsRequest) GetFilters() SnapshotFilterConditions {
	if o == nil || IsNil(o.Filters) {
		var ret SnapshotFilterConditions
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInventorySnapshotsRequest) GetFiltersOk() (*SnapshotFilterConditions, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ListInventorySnapshotsRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given SnapshotFilterConditions and assigns it to the Filters field.
func (o *ListInventorySnapshotsRequest) SetFilters(v SnapshotFilterConditions) {
	o.Filters = &v
}

// GetSorts returns the Sorts field value if set, zero value otherwise.
func (o *ListInventorySnapshotsRequest) GetSorts() []SortSnapshotsBy {
	if o == nil || IsNil(o.Sorts) {
		var ret []SortSnapshotsBy
		return ret
	}
	return o.Sorts
}

// GetSortsOk returns a tuple with the Sorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInventorySnapshotsRequest) GetSortsOk() ([]SortSnapshotsBy, bool) {
	if o == nil || IsNil(o.Sorts) {
		return nil, false
	}
	return o.Sorts, true
}

// HasSorts returns a boolean if a field has been set.
func (o *ListInventorySnapshotsRequest) HasSorts() bool {
	if o != nil && !IsNil(o.Sorts) {
		return true
	}

	return false
}

// SetSorts gets a reference to the given []SortSnapshotsBy and assigns it to the Sorts field.
func (o *ListInventorySnapshotsRequest) SetSorts(v []SortSnapshotsBy) {
	o.Sorts = v
}

func (o ListInventorySnapshotsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInventorySnapshotsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Sorts) {
		toSerialize["sorts"] = o.Sorts
	}
	return toSerialize, nil
}

type NullableListInventorySnapshotsRequest struct {
	value *ListInventorySnapshotsRequest
	isSet bool
}

func (v NullableListInventorySnapshotsRequest) Get() *ListInventorySnapshotsRequest {
	return v.value
}

func (v *NullableListInventorySnapshotsRequest) Set(val *ListInventorySnapshotsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListInventorySnapshotsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListInventorySnapshotsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInventorySnapshotsRequest(val *ListInventorySnapshotsRequest) *NullableListInventorySnapshotsRequest {
	return &NullableListInventorySnapshotsRequest{value: val, isSet: true}
}

func (v NullableListInventorySnapshotsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInventorySnapshotsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


