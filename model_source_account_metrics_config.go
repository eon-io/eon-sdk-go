/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SourceAccountMetricsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceAccountMetricsConfig{}

// SourceAccountMetricsConfig struct for SourceAccountMetricsConfig
type SourceAccountMetricsConfig struct {
	// Eon-assigned source account ID.
	SourceAccountId string `json:"sourceAccountId"`
	// Indicates whether job metrics are enabled for the source account. If `true`, job metrics are collected and can be queried. 
	Enabled bool `json:"enabled"`
	Destination AccountMetricsDestination `json:"destination"`
}

type _SourceAccountMetricsConfig SourceAccountMetricsConfig

// NewSourceAccountMetricsConfig instantiates a new SourceAccountMetricsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceAccountMetricsConfig(sourceAccountId string, enabled bool, destination AccountMetricsDestination) *SourceAccountMetricsConfig {
	this := SourceAccountMetricsConfig{}
	this.SourceAccountId = sourceAccountId
	this.Enabled = enabled
	this.Destination = destination
	return &this
}

// NewSourceAccountMetricsConfigWithDefaults instantiates a new SourceAccountMetricsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceAccountMetricsConfigWithDefaults() *SourceAccountMetricsConfig {
	this := SourceAccountMetricsConfig{}
	return &this
}

// GetSourceAccountId returns the SourceAccountId field value
func (o *SourceAccountMetricsConfig) GetSourceAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceAccountId
}

// GetSourceAccountIdOk returns a tuple with the SourceAccountId field value
// and a boolean to check if the value has been set.
func (o *SourceAccountMetricsConfig) GetSourceAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccountId, true
}

// SetSourceAccountId sets field value
func (o *SourceAccountMetricsConfig) SetSourceAccountId(v string) {
	o.SourceAccountId = v
}

// GetEnabled returns the Enabled field value
func (o *SourceAccountMetricsConfig) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SourceAccountMetricsConfig) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SourceAccountMetricsConfig) SetEnabled(v bool) {
	o.Enabled = v
}

// GetDestination returns the Destination field value
func (o *SourceAccountMetricsConfig) GetDestination() AccountMetricsDestination {
	if o == nil {
		var ret AccountMetricsDestination
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *SourceAccountMetricsConfig) GetDestinationOk() (*AccountMetricsDestination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *SourceAccountMetricsConfig) SetDestination(v AccountMetricsDestination) {
	o.Destination = v
}

func (o SourceAccountMetricsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceAccountMetricsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceAccountId"] = o.SourceAccountId
	toSerialize["enabled"] = o.Enabled
	toSerialize["destination"] = o.Destination
	return toSerialize, nil
}

func (o *SourceAccountMetricsConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceAccountId",
		"enabled",
		"destination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceAccountMetricsConfig := _SourceAccountMetricsConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSourceAccountMetricsConfig)

	if err != nil {
		return err
	}

	*o = SourceAccountMetricsConfig(varSourceAccountMetricsConfig)

	return err
}

type NullableSourceAccountMetricsConfig struct {
	value *SourceAccountMetricsConfig
	isSet bool
}

func (v NullableSourceAccountMetricsConfig) Get() *SourceAccountMetricsConfig {
	return v.value
}

func (v *NullableSourceAccountMetricsConfig) Set(val *SourceAccountMetricsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceAccountMetricsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceAccountMetricsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceAccountMetricsConfig(val *SourceAccountMetricsConfig) *NullableSourceAccountMetricsConfig {
	return &NullableSourceAccountMetricsConfig{value: val, isSet: true}
}

func (v NullableSourceAccountMetricsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceAccountMetricsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


