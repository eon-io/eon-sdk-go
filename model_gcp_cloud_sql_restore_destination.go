/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the GcpCloudSqlRestoreDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpCloudSqlRestoreDestination{}

// GcpCloudSqlRestoreDestination struct for GcpCloudSqlRestoreDestination
type GcpCloudSqlRestoreDestination struct {
	GcpCloudSql *GcpCloudSqlTarget `json:"gcpCloudSql,omitempty"`
}

// NewGcpCloudSqlRestoreDestination instantiates a new GcpCloudSqlRestoreDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpCloudSqlRestoreDestination() *GcpCloudSqlRestoreDestination {
	this := GcpCloudSqlRestoreDestination{}
	return &this
}

// NewGcpCloudSqlRestoreDestinationWithDefaults instantiates a new GcpCloudSqlRestoreDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpCloudSqlRestoreDestinationWithDefaults() *GcpCloudSqlRestoreDestination {
	this := GcpCloudSqlRestoreDestination{}
	return &this
}

// GetGcpCloudSql returns the GcpCloudSql field value if set, zero value otherwise.
func (o *GcpCloudSqlRestoreDestination) GetGcpCloudSql() GcpCloudSqlTarget {
	if o == nil || IsNil(o.GcpCloudSql) {
		var ret GcpCloudSqlTarget
		return ret
	}
	return *o.GcpCloudSql
}

// GetGcpCloudSqlOk returns a tuple with the GcpCloudSql field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpCloudSqlRestoreDestination) GetGcpCloudSqlOk() (*GcpCloudSqlTarget, bool) {
	if o == nil || IsNil(o.GcpCloudSql) {
		return nil, false
	}
	return o.GcpCloudSql, true
}

// HasGcpCloudSql returns a boolean if a field has been set.
func (o *GcpCloudSqlRestoreDestination) HasGcpCloudSql() bool {
	if o != nil && !IsNil(o.GcpCloudSql) {
		return true
	}

	return false
}

// SetGcpCloudSql gets a reference to the given GcpCloudSqlTarget and assigns it to the GcpCloudSql field.
func (o *GcpCloudSqlRestoreDestination) SetGcpCloudSql(v GcpCloudSqlTarget) {
	o.GcpCloudSql = &v
}

func (o GcpCloudSqlRestoreDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpCloudSqlRestoreDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GcpCloudSql) {
		toSerialize["gcpCloudSql"] = o.GcpCloudSql
	}
	return toSerialize, nil
}

type NullableGcpCloudSqlRestoreDestination struct {
	value *GcpCloudSqlRestoreDestination
	isSet bool
}

func (v NullableGcpCloudSqlRestoreDestination) Get() *GcpCloudSqlRestoreDestination {
	return v.value
}

func (v *NullableGcpCloudSqlRestoreDestination) Set(val *GcpCloudSqlRestoreDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpCloudSqlRestoreDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpCloudSqlRestoreDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpCloudSqlRestoreDestination(val *GcpCloudSqlRestoreDestination) *NullableGcpCloudSqlRestoreDestination {
	return &NullableGcpCloudSqlRestoreDestination{value: val, isSet: true}
}

func (v NullableGcpCloudSqlRestoreDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpCloudSqlRestoreDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


