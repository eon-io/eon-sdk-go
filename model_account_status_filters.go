/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the AccountStatusFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountStatusFilters{}

// AccountStatusFilters struct for AccountStatusFilters
type AccountStatusFilters struct {
	// Matches if any value in this list equals `accountStatus`.
	In []AccountState `json:"in,omitempty"`
	// Matches if no value in this list equals `accountStatus`.
	NotIn []AccountState `json:"notIn,omitempty"`
}

// NewAccountStatusFilters instantiates a new AccountStatusFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountStatusFilters() *AccountStatusFilters {
	this := AccountStatusFilters{}
	return &this
}

// NewAccountStatusFiltersWithDefaults instantiates a new AccountStatusFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountStatusFiltersWithDefaults() *AccountStatusFilters {
	this := AccountStatusFilters{}
	return &this
}

// GetIn returns the In field value if set, zero value otherwise.
func (o *AccountStatusFilters) GetIn() []AccountState {
	if o == nil || IsNil(o.In) {
		var ret []AccountState
		return ret
	}
	return o.In
}

// GetInOk returns a tuple with the In field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatusFilters) GetInOk() ([]AccountState, bool) {
	if o == nil || IsNil(o.In) {
		return nil, false
	}
	return o.In, true
}

// HasIn returns a boolean if a field has been set.
func (o *AccountStatusFilters) HasIn() bool {
	if o != nil && !IsNil(o.In) {
		return true
	}

	return false
}

// SetIn gets a reference to the given []AccountState and assigns it to the In field.
func (o *AccountStatusFilters) SetIn(v []AccountState) {
	o.In = v
}

// GetNotIn returns the NotIn field value if set, zero value otherwise.
func (o *AccountStatusFilters) GetNotIn() []AccountState {
	if o == nil || IsNil(o.NotIn) {
		var ret []AccountState
		return ret
	}
	return o.NotIn
}

// GetNotInOk returns a tuple with the NotIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatusFilters) GetNotInOk() ([]AccountState, bool) {
	if o == nil || IsNil(o.NotIn) {
		return nil, false
	}
	return o.NotIn, true
}

// HasNotIn returns a boolean if a field has been set.
func (o *AccountStatusFilters) HasNotIn() bool {
	if o != nil && !IsNil(o.NotIn) {
		return true
	}

	return false
}

// SetNotIn gets a reference to the given []AccountState and assigns it to the NotIn field.
func (o *AccountStatusFilters) SetNotIn(v []AccountState) {
	o.NotIn = v
}

func (o AccountStatusFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountStatusFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.In) {
		toSerialize["in"] = o.In
	}
	if !IsNil(o.NotIn) {
		toSerialize["notIn"] = o.NotIn
	}
	return toSerialize, nil
}

type NullableAccountStatusFilters struct {
	value *AccountStatusFilters
	isSet bool
}

func (v NullableAccountStatusFilters) Get() *AccountStatusFilters {
	return v.value
}

func (v *NullableAccountStatusFilters) Set(val *AccountStatusFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountStatusFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountStatusFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountStatusFilters(val *AccountStatusFilters) *NullableAccountStatusFilters {
	return &NullableAccountStatusFilters{value: val, isSet: true}
}

func (v NullableAccountStatusFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountStatusFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


