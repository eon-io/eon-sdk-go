/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the ListSourceAccountsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSourceAccountsRequest{}

// ListSourceAccountsRequest struct for ListSourceAccountsRequest
type ListSourceAccountsRequest struct {
	Filters *SourceAccountsFilterConditions `json:"filters,omitempty"`
	Sorts []SortSourceAccountsBy `json:"sorts,omitempty"`
}

// NewListSourceAccountsRequest instantiates a new ListSourceAccountsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSourceAccountsRequest() *ListSourceAccountsRequest {
	this := ListSourceAccountsRequest{}
	return &this
}

// NewListSourceAccountsRequestWithDefaults instantiates a new ListSourceAccountsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSourceAccountsRequestWithDefaults() *ListSourceAccountsRequest {
	this := ListSourceAccountsRequest{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ListSourceAccountsRequest) GetFilters() SourceAccountsFilterConditions {
	if o == nil || IsNil(o.Filters) {
		var ret SourceAccountsFilterConditions
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSourceAccountsRequest) GetFiltersOk() (*SourceAccountsFilterConditions, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ListSourceAccountsRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given SourceAccountsFilterConditions and assigns it to the Filters field.
func (o *ListSourceAccountsRequest) SetFilters(v SourceAccountsFilterConditions) {
	o.Filters = &v
}

// GetSorts returns the Sorts field value if set, zero value otherwise.
func (o *ListSourceAccountsRequest) GetSorts() []SortSourceAccountsBy {
	if o == nil || IsNil(o.Sorts) {
		var ret []SortSourceAccountsBy
		return ret
	}
	return o.Sorts
}

// GetSortsOk returns a tuple with the Sorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSourceAccountsRequest) GetSortsOk() ([]SortSourceAccountsBy, bool) {
	if o == nil || IsNil(o.Sorts) {
		return nil, false
	}
	return o.Sorts, true
}

// HasSorts returns a boolean if a field has been set.
func (o *ListSourceAccountsRequest) HasSorts() bool {
	if o != nil && !IsNil(o.Sorts) {
		return true
	}

	return false
}

// SetSorts gets a reference to the given []SortSourceAccountsBy and assigns it to the Sorts field.
func (o *ListSourceAccountsRequest) SetSorts(v []SortSourceAccountsBy) {
	o.Sorts = v
}

func (o ListSourceAccountsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSourceAccountsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Sorts) {
		toSerialize["sorts"] = o.Sorts
	}
	return toSerialize, nil
}

type NullableListSourceAccountsRequest struct {
	value *ListSourceAccountsRequest
	isSet bool
}

func (v NullableListSourceAccountsRequest) Get() *ListSourceAccountsRequest {
	return v.value
}

func (v *NullableListSourceAccountsRequest) Set(val *ListSourceAccountsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListSourceAccountsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListSourceAccountsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSourceAccountsRequest(val *ListSourceAccountsRequest) *NullableListSourceAccountsRequest {
	return &NullableListSourceAccountsRequest{value: val, isSet: true}
}

func (v NullableListSourceAccountsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSourceAccountsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


