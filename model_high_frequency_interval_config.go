/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HighFrequencyIntervalConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HighFrequencyIntervalConfig{}

// HighFrequencyIntervalConfig struct for HighFrequencyIntervalConfig
type HighFrequencyIntervalConfig struct {
	IntervalMinutes int32 `json:"intervalMinutes"`
}

type _HighFrequencyIntervalConfig HighFrequencyIntervalConfig

// NewHighFrequencyIntervalConfig instantiates a new HighFrequencyIntervalConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHighFrequencyIntervalConfig(intervalMinutes int32) *HighFrequencyIntervalConfig {
	this := HighFrequencyIntervalConfig{}
	this.IntervalMinutes = intervalMinutes
	return &this
}

// NewHighFrequencyIntervalConfigWithDefaults instantiates a new HighFrequencyIntervalConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHighFrequencyIntervalConfigWithDefaults() *HighFrequencyIntervalConfig {
	this := HighFrequencyIntervalConfig{}
	return &this
}

// GetIntervalMinutes returns the IntervalMinutes field value
func (o *HighFrequencyIntervalConfig) GetIntervalMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IntervalMinutes
}

// GetIntervalMinutesOk returns a tuple with the IntervalMinutes field value
// and a boolean to check if the value has been set.
func (o *HighFrequencyIntervalConfig) GetIntervalMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntervalMinutes, true
}

// SetIntervalMinutes sets field value
func (o *HighFrequencyIntervalConfig) SetIntervalMinutes(v int32) {
	o.IntervalMinutes = v
}

func (o HighFrequencyIntervalConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HighFrequencyIntervalConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["intervalMinutes"] = o.IntervalMinutes
	return toSerialize, nil
}

func (o *HighFrequencyIntervalConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"intervalMinutes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHighFrequencyIntervalConfig := _HighFrequencyIntervalConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHighFrequencyIntervalConfig)

	if err != nil {
		return err
	}

	*o = HighFrequencyIntervalConfig(varHighFrequencyIntervalConfig)

	return err
}

type NullableHighFrequencyIntervalConfig struct {
	value *HighFrequencyIntervalConfig
	isSet bool
}

func (v NullableHighFrequencyIntervalConfig) Get() *HighFrequencyIntervalConfig {
	return v.value
}

func (v *NullableHighFrequencyIntervalConfig) Set(val *HighFrequencyIntervalConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHighFrequencyIntervalConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHighFrequencyIntervalConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHighFrequencyIntervalConfig(val *HighFrequencyIntervalConfig) *NullableHighFrequencyIntervalConfig {
	return &NullableHighFrequencyIntervalConfig{value: val, isSet: true}
}

func (v NullableHighFrequencyIntervalConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHighFrequencyIntervalConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


