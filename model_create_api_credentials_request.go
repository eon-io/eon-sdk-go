/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateApiCredentialsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApiCredentialsRequest{}

// CreateApiCredentialsRequest struct for CreateApiCredentialsRequest
type CreateApiCredentialsRequest struct {
	// The name of the api credential user
	Name string `json:"name"`
	// The role ID of the api credential user
	RoleId string `json:"roleId"`
	// The projects the api credential user has access to
	Projects []string `json:"projects"`
	// Whether the api credentials user can rotate their own secret
	EnableCurrentSecretRotation *bool `json:"enableCurrentSecretRotation,omitempty"`
}

type _CreateApiCredentialsRequest CreateApiCredentialsRequest

// NewCreateApiCredentialsRequest instantiates a new CreateApiCredentialsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiCredentialsRequest(name string, roleId string, projects []string) *CreateApiCredentialsRequest {
	this := CreateApiCredentialsRequest{}
	this.Name = name
	this.RoleId = roleId
	this.Projects = projects
	var enableCurrentSecretRotation bool = false
	this.EnableCurrentSecretRotation = &enableCurrentSecretRotation
	return &this
}

// NewCreateApiCredentialsRequestWithDefaults instantiates a new CreateApiCredentialsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiCredentialsRequestWithDefaults() *CreateApiCredentialsRequest {
	this := CreateApiCredentialsRequest{}
	var enableCurrentSecretRotation bool = false
	this.EnableCurrentSecretRotation = &enableCurrentSecretRotation
	return &this
}

// GetName returns the Name field value
func (o *CreateApiCredentialsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApiCredentialsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApiCredentialsRequest) SetName(v string) {
	o.Name = v
}

// GetRoleId returns the RoleId field value
func (o *CreateApiCredentialsRequest) GetRoleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value
// and a boolean to check if the value has been set.
func (o *CreateApiCredentialsRequest) GetRoleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoleId, true
}

// SetRoleId sets field value
func (o *CreateApiCredentialsRequest) SetRoleId(v string) {
	o.RoleId = v
}

// GetProjects returns the Projects field value
func (o *CreateApiCredentialsRequest) GetProjects() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value
// and a boolean to check if the value has been set.
func (o *CreateApiCredentialsRequest) GetProjectsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Projects, true
}

// SetProjects sets field value
func (o *CreateApiCredentialsRequest) SetProjects(v []string) {
	o.Projects = v
}

// GetEnableCurrentSecretRotation returns the EnableCurrentSecretRotation field value if set, zero value otherwise.
func (o *CreateApiCredentialsRequest) GetEnableCurrentSecretRotation() bool {
	if o == nil || IsNil(o.EnableCurrentSecretRotation) {
		var ret bool
		return ret
	}
	return *o.EnableCurrentSecretRotation
}

// GetEnableCurrentSecretRotationOk returns a tuple with the EnableCurrentSecretRotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiCredentialsRequest) GetEnableCurrentSecretRotationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableCurrentSecretRotation) {
		return nil, false
	}
	return o.EnableCurrentSecretRotation, true
}

// HasEnableCurrentSecretRotation returns a boolean if a field has been set.
func (o *CreateApiCredentialsRequest) HasEnableCurrentSecretRotation() bool {
	if o != nil && !IsNil(o.EnableCurrentSecretRotation) {
		return true
	}

	return false
}

// SetEnableCurrentSecretRotation gets a reference to the given bool and assigns it to the EnableCurrentSecretRotation field.
func (o *CreateApiCredentialsRequest) SetEnableCurrentSecretRotation(v bool) {
	o.EnableCurrentSecretRotation = &v
}

func (o CreateApiCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApiCredentialsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["roleId"] = o.RoleId
	toSerialize["projects"] = o.Projects
	if !IsNil(o.EnableCurrentSecretRotation) {
		toSerialize["enableCurrentSecretRotation"] = o.EnableCurrentSecretRotation
	}
	return toSerialize, nil
}

func (o *CreateApiCredentialsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"roleId",
		"projects",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApiCredentialsRequest := _CreateApiCredentialsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApiCredentialsRequest)

	if err != nil {
		return err
	}

	*o = CreateApiCredentialsRequest(varCreateApiCredentialsRequest)

	return err
}

type NullableCreateApiCredentialsRequest struct {
	value *CreateApiCredentialsRequest
	isSet bool
}

func (v NullableCreateApiCredentialsRequest) Get() *CreateApiCredentialsRequest {
	return v.value
}

func (v *NullableCreateApiCredentialsRequest) Set(val *CreateApiCredentialsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiCredentialsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiCredentialsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiCredentialsRequest(val *CreateApiCredentialsRequest) *NullableCreateApiCredentialsRequest {
	return &NullableCreateApiCredentialsRequest{value: val, isSet: true}
}

func (v NullableCreateApiCredentialsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiCredentialsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


