/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the RestoreAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreAccount{}

// RestoreAccount struct for RestoreAccount
type RestoreAccount struct {
	// Eon-assigned restore account ID.
	Id string `json:"id"`
	// Cloud-provider-assigned account ID.
	ProviderAccountId string `json:"providerAccountId"`
	// Account display name in Eon.
	Name string `json:"name"`
	// The display name of the account from the cloud provider
	ProviderAccountName *string `json:"providerAccountName,omitempty"`
	Status AccountState `json:"status"`
	Version *AccountVersion `json:"version,omitempty"`
	// The date and time the account was connected to Eon
	ConnectionTime *time.Time `json:"connectionTime,omitempty"`
	RestoreAccountAttributes *AccountConfig `json:"restoreAccountAttributes,omitempty"`
}

type _RestoreAccount RestoreAccount

// NewRestoreAccount instantiates a new RestoreAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreAccount(id string, providerAccountId string, name string, status AccountState) *RestoreAccount {
	this := RestoreAccount{}
	this.Id = id
	this.ProviderAccountId = providerAccountId
	this.Name = name
	this.Status = status
	return &this
}

// NewRestoreAccountWithDefaults instantiates a new RestoreAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreAccountWithDefaults() *RestoreAccount {
	this := RestoreAccount{}
	return &this
}

// GetId returns the Id field value
func (o *RestoreAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RestoreAccount) SetId(v string) {
	o.Id = v
}

// GetProviderAccountId returns the ProviderAccountId field value
func (o *RestoreAccount) GetProviderAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderAccountId
}

// GetProviderAccountIdOk returns a tuple with the ProviderAccountId field value
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetProviderAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderAccountId, true
}

// SetProviderAccountId sets field value
func (o *RestoreAccount) SetProviderAccountId(v string) {
	o.ProviderAccountId = v
}

// GetName returns the Name field value
func (o *RestoreAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RestoreAccount) SetName(v string) {
	o.Name = v
}

// GetProviderAccountName returns the ProviderAccountName field value if set, zero value otherwise.
func (o *RestoreAccount) GetProviderAccountName() string {
	if o == nil || IsNil(o.ProviderAccountName) {
		var ret string
		return ret
	}
	return *o.ProviderAccountName
}

// GetProviderAccountNameOk returns a tuple with the ProviderAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetProviderAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderAccountName) {
		return nil, false
	}
	return o.ProviderAccountName, true
}

// HasProviderAccountName returns a boolean if a field has been set.
func (o *RestoreAccount) HasProviderAccountName() bool {
	if o != nil && !IsNil(o.ProviderAccountName) {
		return true
	}

	return false
}

// SetProviderAccountName gets a reference to the given string and assigns it to the ProviderAccountName field.
func (o *RestoreAccount) SetProviderAccountName(v string) {
	o.ProviderAccountName = &v
}

// GetStatus returns the Status field value
func (o *RestoreAccount) GetStatus() AccountState {
	if o == nil {
		var ret AccountState
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetStatusOk() (*AccountState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *RestoreAccount) SetStatus(v AccountState) {
	o.Status = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RestoreAccount) GetVersion() AccountVersion {
	if o == nil || IsNil(o.Version) {
		var ret AccountVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetVersionOk() (*AccountVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RestoreAccount) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given AccountVersion and assigns it to the Version field.
func (o *RestoreAccount) SetVersion(v AccountVersion) {
	o.Version = &v
}

// GetConnectionTime returns the ConnectionTime field value if set, zero value otherwise.
func (o *RestoreAccount) GetConnectionTime() time.Time {
	if o == nil || IsNil(o.ConnectionTime) {
		var ret time.Time
		return ret
	}
	return *o.ConnectionTime
}

// GetConnectionTimeOk returns a tuple with the ConnectionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetConnectionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ConnectionTime) {
		return nil, false
	}
	return o.ConnectionTime, true
}

// HasConnectionTime returns a boolean if a field has been set.
func (o *RestoreAccount) HasConnectionTime() bool {
	if o != nil && !IsNil(o.ConnectionTime) {
		return true
	}

	return false
}

// SetConnectionTime gets a reference to the given time.Time and assigns it to the ConnectionTime field.
func (o *RestoreAccount) SetConnectionTime(v time.Time) {
	o.ConnectionTime = &v
}

// GetRestoreAccountAttributes returns the RestoreAccountAttributes field value if set, zero value otherwise.
func (o *RestoreAccount) GetRestoreAccountAttributes() AccountConfig {
	if o == nil || IsNil(o.RestoreAccountAttributes) {
		var ret AccountConfig
		return ret
	}
	return *o.RestoreAccountAttributes
}

// GetRestoreAccountAttributesOk returns a tuple with the RestoreAccountAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccount) GetRestoreAccountAttributesOk() (*AccountConfig, bool) {
	if o == nil || IsNil(o.RestoreAccountAttributes) {
		return nil, false
	}
	return o.RestoreAccountAttributes, true
}

// HasRestoreAccountAttributes returns a boolean if a field has been set.
func (o *RestoreAccount) HasRestoreAccountAttributes() bool {
	if o != nil && !IsNil(o.RestoreAccountAttributes) {
		return true
	}

	return false
}

// SetRestoreAccountAttributes gets a reference to the given AccountConfig and assigns it to the RestoreAccountAttributes field.
func (o *RestoreAccount) SetRestoreAccountAttributes(v AccountConfig) {
	o.RestoreAccountAttributes = &v
}

func (o RestoreAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["providerAccountId"] = o.ProviderAccountId
	toSerialize["name"] = o.Name
	if !IsNil(o.ProviderAccountName) {
		toSerialize["providerAccountName"] = o.ProviderAccountName
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.ConnectionTime) {
		toSerialize["connectionTime"] = o.ConnectionTime
	}
	if !IsNil(o.RestoreAccountAttributes) {
		toSerialize["restoreAccountAttributes"] = o.RestoreAccountAttributes
	}
	return toSerialize, nil
}

func (o *RestoreAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"providerAccountId",
		"name",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestoreAccount := _RestoreAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestoreAccount)

	if err != nil {
		return err
	}

	*o = RestoreAccount(varRestoreAccount)

	return err
}

type NullableRestoreAccount struct {
	value *RestoreAccount
	isSet bool
}

func (v NullableRestoreAccount) Get() *RestoreAccount {
	return v.value
}

func (v *NullableRestoreAccount) Set(val *RestoreAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreAccount(val *RestoreAccount) *NullableRestoreAccount {
	return &NullableRestoreAccount{value: val, isSet: true}
}

func (v NullableRestoreAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


