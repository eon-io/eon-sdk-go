/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RestoreAccountConnectivityConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreAccountConnectivityConfig{}

// RestoreAccountConnectivityConfig struct for RestoreAccountConnectivityConfig
type RestoreAccountConnectivityConfig struct {
	// Eon-assigned ID of the restore account.
	RestoreAccountId string                                   `json:"restoreAccountId"`
	Config           ProviderRestoreAccountConnectivityConfig `json:"config"`
}

type _RestoreAccountConnectivityConfig RestoreAccountConnectivityConfig

// NewRestoreAccountConnectivityConfig instantiates a new RestoreAccountConnectivityConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreAccountConnectivityConfig(restoreAccountId string, config ProviderRestoreAccountConnectivityConfig) *RestoreAccountConnectivityConfig {
	this := RestoreAccountConnectivityConfig{}
	this.RestoreAccountId = restoreAccountId
	this.Config = config
	return &this
}

// NewRestoreAccountConnectivityConfigWithDefaults instantiates a new RestoreAccountConnectivityConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreAccountConnectivityConfigWithDefaults() *RestoreAccountConnectivityConfig {
	this := RestoreAccountConnectivityConfig{}
	return &this
}

// GetRestoreAccountId returns the RestoreAccountId field value
func (o *RestoreAccountConnectivityConfig) GetRestoreAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreAccountId
}

// GetRestoreAccountIdOk returns a tuple with the RestoreAccountId field value
// and a boolean to check if the value has been set.
func (o *RestoreAccountConnectivityConfig) GetRestoreAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreAccountId, true
}

// SetRestoreAccountId sets field value
func (o *RestoreAccountConnectivityConfig) SetRestoreAccountId(v string) {
	o.RestoreAccountId = v
}

// GetConfig returns the Config field value
func (o *RestoreAccountConnectivityConfig) GetConfig() ProviderRestoreAccountConnectivityConfig {
	if o == nil {
		var ret ProviderRestoreAccountConnectivityConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *RestoreAccountConnectivityConfig) GetConfigOk() (*ProviderRestoreAccountConnectivityConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *RestoreAccountConnectivityConfig) SetConfig(v ProviderRestoreAccountConnectivityConfig) {
	o.Config = v
}

func (o RestoreAccountConnectivityConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreAccountConnectivityConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["restoreAccountId"] = o.RestoreAccountId
	toSerialize["config"] = o.Config
	return toSerialize, nil
}

func (o *RestoreAccountConnectivityConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"restoreAccountId",
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestoreAccountConnectivityConfig := _RestoreAccountConnectivityConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestoreAccountConnectivityConfig)

	if err != nil {
		return err
	}

	*o = RestoreAccountConnectivityConfig(varRestoreAccountConnectivityConfig)

	return err
}

type NullableRestoreAccountConnectivityConfig struct {
	value *RestoreAccountConnectivityConfig
	isSet bool
}

func (v NullableRestoreAccountConnectivityConfig) Get() *RestoreAccountConnectivityConfig {
	return v.value
}

func (v *NullableRestoreAccountConnectivityConfig) Set(val *RestoreAccountConnectivityConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreAccountConnectivityConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreAccountConnectivityConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreAccountConnectivityConfig(val *RestoreAccountConnectivityConfig) *NullableRestoreAccountConnectivityConfig {
	return &NullableRestoreAccountConnectivityConfig{value: val, isSet: true}
}

func (v NullableRestoreAccountConnectivityConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreAccountConnectivityConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
