/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GcpSourceAccountAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpSourceAccountAttributes{}

// GcpSourceAccountAttributes GCP project configuration. Applicable if `cloudProvider` is set to `GCP`. 
type GcpSourceAccountAttributes struct {
	ServiceAccount string `json:"serviceAccount"`
}

type _GcpSourceAccountAttributes GcpSourceAccountAttributes

// NewGcpSourceAccountAttributes instantiates a new GcpSourceAccountAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpSourceAccountAttributes(serviceAccount string) *GcpSourceAccountAttributes {
	this := GcpSourceAccountAttributes{}
	this.ServiceAccount = serviceAccount
	return &this
}

// NewGcpSourceAccountAttributesWithDefaults instantiates a new GcpSourceAccountAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpSourceAccountAttributesWithDefaults() *GcpSourceAccountAttributes {
	this := GcpSourceAccountAttributes{}
	return &this
}

// GetServiceAccount returns the ServiceAccount field value
func (o *GcpSourceAccountAttributes) GetServiceAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value
// and a boolean to check if the value has been set.
func (o *GcpSourceAccountAttributes) GetServiceAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccount, true
}

// SetServiceAccount sets field value
func (o *GcpSourceAccountAttributes) SetServiceAccount(v string) {
	o.ServiceAccount = v
}

func (o GcpSourceAccountAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpSourceAccountAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serviceAccount"] = o.ServiceAccount
	return toSerialize, nil
}

func (o *GcpSourceAccountAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serviceAccount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGcpSourceAccountAttributes := _GcpSourceAccountAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGcpSourceAccountAttributes)

	if err != nil {
		return err
	}

	*o = GcpSourceAccountAttributes(varGcpSourceAccountAttributes)

	return err
}

type NullableGcpSourceAccountAttributes struct {
	value *GcpSourceAccountAttributes
	isSet bool
}

func (v NullableGcpSourceAccountAttributes) Get() *GcpSourceAccountAttributes {
	return v.value
}

func (v *NullableGcpSourceAccountAttributes) Set(val *GcpSourceAccountAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpSourceAccountAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpSourceAccountAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpSourceAccountAttributes(val *GcpSourceAccountAttributes) *NullableGcpSourceAccountAttributes {
	return &NullableGcpSourceAccountAttributes{value: val, isSet: true}
}

func (v NullableGcpSourceAccountAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpSourceAccountAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


