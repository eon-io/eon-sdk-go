/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QueryCostDataResponseRecordsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryCostDataResponseRecordsInner{}

// QueryCostDataResponseRecordsInner struct for QueryCostDataResponseRecordsInner
type QueryCostDataResponseRecordsInner struct {
	TimePeriod TimePeriod `json:"timePeriod"`
	// Total number of unique resources in the record
	TotalUniqueResources *int32 `json:"totalUniqueResources,omitempty"`
	Dimensions *QueryCostDataResponseRecordsInnerDimensions `json:"dimensions,omitempty"`
	// Cost breakdown by metering dimension
	Costs []QueryCostDataResponseRecordsInnerCostsInner `json:"costs"`
}

type _QueryCostDataResponseRecordsInner QueryCostDataResponseRecordsInner

// NewQueryCostDataResponseRecordsInner instantiates a new QueryCostDataResponseRecordsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryCostDataResponseRecordsInner(timePeriod TimePeriod, costs []QueryCostDataResponseRecordsInnerCostsInner) *QueryCostDataResponseRecordsInner {
	this := QueryCostDataResponseRecordsInner{}
	this.TimePeriod = timePeriod
	this.Costs = costs
	return &this
}

// NewQueryCostDataResponseRecordsInnerWithDefaults instantiates a new QueryCostDataResponseRecordsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryCostDataResponseRecordsInnerWithDefaults() *QueryCostDataResponseRecordsInner {
	this := QueryCostDataResponseRecordsInner{}
	return &this
}

// GetTimePeriod returns the TimePeriod field value
func (o *QueryCostDataResponseRecordsInner) GetTimePeriod() TimePeriod {
	if o == nil {
		var ret TimePeriod
		return ret
	}

	return o.TimePeriod
}

// GetTimePeriodOk returns a tuple with the TimePeriod field value
// and a boolean to check if the value has been set.
func (o *QueryCostDataResponseRecordsInner) GetTimePeriodOk() (*TimePeriod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimePeriod, true
}

// SetTimePeriod sets field value
func (o *QueryCostDataResponseRecordsInner) SetTimePeriod(v TimePeriod) {
	o.TimePeriod = v
}

// GetTotalUniqueResources returns the TotalUniqueResources field value if set, zero value otherwise.
func (o *QueryCostDataResponseRecordsInner) GetTotalUniqueResources() int32 {
	if o == nil || IsNil(o.TotalUniqueResources) {
		var ret int32
		return ret
	}
	return *o.TotalUniqueResources
}

// GetTotalUniqueResourcesOk returns a tuple with the TotalUniqueResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCostDataResponseRecordsInner) GetTotalUniqueResourcesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalUniqueResources) {
		return nil, false
	}
	return o.TotalUniqueResources, true
}

// HasTotalUniqueResources returns a boolean if a field has been set.
func (o *QueryCostDataResponseRecordsInner) HasTotalUniqueResources() bool {
	if o != nil && !IsNil(o.TotalUniqueResources) {
		return true
	}

	return false
}

// SetTotalUniqueResources gets a reference to the given int32 and assigns it to the TotalUniqueResources field.
func (o *QueryCostDataResponseRecordsInner) SetTotalUniqueResources(v int32) {
	o.TotalUniqueResources = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *QueryCostDataResponseRecordsInner) GetDimensions() QueryCostDataResponseRecordsInnerDimensions {
	if o == nil || IsNil(o.Dimensions) {
		var ret QueryCostDataResponseRecordsInnerDimensions
		return ret
	}
	return *o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCostDataResponseRecordsInner) GetDimensionsOk() (*QueryCostDataResponseRecordsInnerDimensions, bool) {
	if o == nil || IsNil(o.Dimensions) {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *QueryCostDataResponseRecordsInner) HasDimensions() bool {
	if o != nil && !IsNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given QueryCostDataResponseRecordsInnerDimensions and assigns it to the Dimensions field.
func (o *QueryCostDataResponseRecordsInner) SetDimensions(v QueryCostDataResponseRecordsInnerDimensions) {
	o.Dimensions = &v
}

// GetCosts returns the Costs field value
func (o *QueryCostDataResponseRecordsInner) GetCosts() []QueryCostDataResponseRecordsInnerCostsInner {
	if o == nil {
		var ret []QueryCostDataResponseRecordsInnerCostsInner
		return ret
	}

	return o.Costs
}

// GetCostsOk returns a tuple with the Costs field value
// and a boolean to check if the value has been set.
func (o *QueryCostDataResponseRecordsInner) GetCostsOk() ([]QueryCostDataResponseRecordsInnerCostsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Costs, true
}

// SetCosts sets field value
func (o *QueryCostDataResponseRecordsInner) SetCosts(v []QueryCostDataResponseRecordsInnerCostsInner) {
	o.Costs = v
}

func (o QueryCostDataResponseRecordsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryCostDataResponseRecordsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timePeriod"] = o.TimePeriod
	if !IsNil(o.TotalUniqueResources) {
		toSerialize["totalUniqueResources"] = o.TotalUniqueResources
	}
	if !IsNil(o.Dimensions) {
		toSerialize["dimensions"] = o.Dimensions
	}
	toSerialize["costs"] = o.Costs
	return toSerialize, nil
}

func (o *QueryCostDataResponseRecordsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timePeriod",
		"costs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryCostDataResponseRecordsInner := _QueryCostDataResponseRecordsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueryCostDataResponseRecordsInner)

	if err != nil {
		return err
	}

	*o = QueryCostDataResponseRecordsInner(varQueryCostDataResponseRecordsInner)

	return err
}

type NullableQueryCostDataResponseRecordsInner struct {
	value *QueryCostDataResponseRecordsInner
	isSet bool
}

func (v NullableQueryCostDataResponseRecordsInner) Get() *QueryCostDataResponseRecordsInner {
	return v.value
}

func (v *NullableQueryCostDataResponseRecordsInner) Set(val *QueryCostDataResponseRecordsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryCostDataResponseRecordsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryCostDataResponseRecordsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryCostDataResponseRecordsInner(val *QueryCostDataResponseRecordsInner) *NullableQueryCostDataResponseRecordsInner {
	return &NullableQueryCostDataResponseRecordsInner{value: val, isSet: true}
}

func (v NullableQueryCostDataResponseRecordsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryCostDataResponseRecordsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


