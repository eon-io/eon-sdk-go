/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HighFrequencyBackupPolicyPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HighFrequencyBackupPolicyPlan{}

// HighFrequencyBackupPolicyPlan struct for HighFrequencyBackupPolicyPlan
type HighFrequencyBackupPolicyPlan struct {
	// Resource types to backup.
	ResourceTypes []HighFrequencyBackupResourceType `json:"resourceTypes"`
	// List of backup schedules. Each schedule specifies a backup frequency, retention period, and vault.
	BackupSchedules []HighFrequencyBackupSchedules `json:"backupSchedules"`
}

type _HighFrequencyBackupPolicyPlan HighFrequencyBackupPolicyPlan

// NewHighFrequencyBackupPolicyPlan instantiates a new HighFrequencyBackupPolicyPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHighFrequencyBackupPolicyPlan(resourceTypes []HighFrequencyBackupResourceType, backupSchedules []HighFrequencyBackupSchedules) *HighFrequencyBackupPolicyPlan {
	this := HighFrequencyBackupPolicyPlan{}
	this.ResourceTypes = resourceTypes
	this.BackupSchedules = backupSchedules
	return &this
}

// NewHighFrequencyBackupPolicyPlanWithDefaults instantiates a new HighFrequencyBackupPolicyPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHighFrequencyBackupPolicyPlanWithDefaults() *HighFrequencyBackupPolicyPlan {
	this := HighFrequencyBackupPolicyPlan{}
	return &this
}

// GetResourceTypes returns the ResourceTypes field value
func (o *HighFrequencyBackupPolicyPlan) GetResourceTypes() []HighFrequencyBackupResourceType {
	if o == nil {
		var ret []HighFrequencyBackupResourceType
		return ret
	}

	return o.ResourceTypes
}

// GetResourceTypesOk returns a tuple with the ResourceTypes field value
// and a boolean to check if the value has been set.
func (o *HighFrequencyBackupPolicyPlan) GetResourceTypesOk() ([]HighFrequencyBackupResourceType, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceTypes, true
}

// SetResourceTypes sets field value
func (o *HighFrequencyBackupPolicyPlan) SetResourceTypes(v []HighFrequencyBackupResourceType) {
	o.ResourceTypes = v
}

// GetBackupSchedules returns the BackupSchedules field value
func (o *HighFrequencyBackupPolicyPlan) GetBackupSchedules() []HighFrequencyBackupSchedules {
	if o == nil {
		var ret []HighFrequencyBackupSchedules
		return ret
	}

	return o.BackupSchedules
}

// GetBackupSchedulesOk returns a tuple with the BackupSchedules field value
// and a boolean to check if the value has been set.
func (o *HighFrequencyBackupPolicyPlan) GetBackupSchedulesOk() ([]HighFrequencyBackupSchedules, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupSchedules, true
}

// SetBackupSchedules sets field value
func (o *HighFrequencyBackupPolicyPlan) SetBackupSchedules(v []HighFrequencyBackupSchedules) {
	o.BackupSchedules = v
}

func (o HighFrequencyBackupPolicyPlan) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HighFrequencyBackupPolicyPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceTypes"] = o.ResourceTypes
	toSerialize["backupSchedules"] = o.BackupSchedules
	return toSerialize, nil
}

func (o *HighFrequencyBackupPolicyPlan) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourceTypes",
		"backupSchedules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHighFrequencyBackupPolicyPlan := _HighFrequencyBackupPolicyPlan{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHighFrequencyBackupPolicyPlan)

	if err != nil {
		return err
	}

	*o = HighFrequencyBackupPolicyPlan(varHighFrequencyBackupPolicyPlan)

	return err
}

type NullableHighFrequencyBackupPolicyPlan struct {
	value *HighFrequencyBackupPolicyPlan
	isSet bool
}

func (v NullableHighFrequencyBackupPolicyPlan) Get() *HighFrequencyBackupPolicyPlan {
	return v.value
}

func (v *NullableHighFrequencyBackupPolicyPlan) Set(val *HighFrequencyBackupPolicyPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableHighFrequencyBackupPolicyPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableHighFrequencyBackupPolicyPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHighFrequencyBackupPolicyPlan(val *HighFrequencyBackupPolicyPlan) *NullableHighFrequencyBackupPolicyPlan {
	return &NullableHighFrequencyBackupPolicyPlan{value: val, isSet: true}
}

func (v NullableHighFrequencyBackupPolicyPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHighFrequencyBackupPolicyPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
