/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the ListRestoreJobsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRestoreJobsRequest{}

// ListRestoreJobsRequest struct for ListRestoreJobsRequest
type ListRestoreJobsRequest struct {
	Filters *RestoreJobsFilterConditions `json:"filters,omitempty"`
	Sorts []SortRestoreJobBy `json:"sorts,omitempty"`
}

// NewListRestoreJobsRequest instantiates a new ListRestoreJobsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRestoreJobsRequest() *ListRestoreJobsRequest {
	this := ListRestoreJobsRequest{}
	return &this
}

// NewListRestoreJobsRequestWithDefaults instantiates a new ListRestoreJobsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRestoreJobsRequestWithDefaults() *ListRestoreJobsRequest {
	this := ListRestoreJobsRequest{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ListRestoreJobsRequest) GetFilters() RestoreJobsFilterConditions {
	if o == nil || IsNil(o.Filters) {
		var ret RestoreJobsFilterConditions
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRestoreJobsRequest) GetFiltersOk() (*RestoreJobsFilterConditions, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ListRestoreJobsRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given RestoreJobsFilterConditions and assigns it to the Filters field.
func (o *ListRestoreJobsRequest) SetFilters(v RestoreJobsFilterConditions) {
	o.Filters = &v
}

// GetSorts returns the Sorts field value if set, zero value otherwise.
func (o *ListRestoreJobsRequest) GetSorts() []SortRestoreJobBy {
	if o == nil || IsNil(o.Sorts) {
		var ret []SortRestoreJobBy
		return ret
	}
	return o.Sorts
}

// GetSortsOk returns a tuple with the Sorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRestoreJobsRequest) GetSortsOk() ([]SortRestoreJobBy, bool) {
	if o == nil || IsNil(o.Sorts) {
		return nil, false
	}
	return o.Sorts, true
}

// HasSorts returns a boolean if a field has been set.
func (o *ListRestoreJobsRequest) HasSorts() bool {
	if o != nil && !IsNil(o.Sorts) {
		return true
	}

	return false
}

// SetSorts gets a reference to the given []SortRestoreJobBy and assigns it to the Sorts field.
func (o *ListRestoreJobsRequest) SetSorts(v []SortRestoreJobBy) {
	o.Sorts = v
}

func (o ListRestoreJobsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRestoreJobsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Sorts) {
		toSerialize["sorts"] = o.Sorts
	}
	return toSerialize, nil
}

type NullableListRestoreJobsRequest struct {
	value *ListRestoreJobsRequest
	isSet bool
}

func (v NullableListRestoreJobsRequest) Get() *ListRestoreJobsRequest {
	return v.value
}

func (v *NullableListRestoreJobsRequest) Set(val *ListRestoreJobsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListRestoreJobsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListRestoreJobsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRestoreJobsRequest(val *ListRestoreJobsRequest) *NullableListRestoreJobsRequest {
	return &NullableListRestoreJobsRequest{value: val, isSet: true}
}

func (v NullableListRestoreJobsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRestoreJobsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


