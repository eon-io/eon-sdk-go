/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the AzureDiskRestoreDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureDiskRestoreDestination{}

// AzureDiskRestoreDestination struct for AzureDiskRestoreDestination
type AzureDiskRestoreDestination struct {
	AzureDisk *AzureDiskTarget `json:"azureDisk,omitempty"`
}

// NewAzureDiskRestoreDestination instantiates a new AzureDiskRestoreDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureDiskRestoreDestination() *AzureDiskRestoreDestination {
	this := AzureDiskRestoreDestination{}
	return &this
}

// NewAzureDiskRestoreDestinationWithDefaults instantiates a new AzureDiskRestoreDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureDiskRestoreDestinationWithDefaults() *AzureDiskRestoreDestination {
	this := AzureDiskRestoreDestination{}
	return &this
}

// GetAzureDisk returns the AzureDisk field value if set, zero value otherwise.
func (o *AzureDiskRestoreDestination) GetAzureDisk() AzureDiskTarget {
	if o == nil || IsNil(o.AzureDisk) {
		var ret AzureDiskTarget
		return ret
	}
	return *o.AzureDisk
}

// GetAzureDiskOk returns a tuple with the AzureDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureDiskRestoreDestination) GetAzureDiskOk() (*AzureDiskTarget, bool) {
	if o == nil || IsNil(o.AzureDisk) {
		return nil, false
	}
	return o.AzureDisk, true
}

// HasAzureDisk returns a boolean if a field has been set.
func (o *AzureDiskRestoreDestination) HasAzureDisk() bool {
	if o != nil && !IsNil(o.AzureDisk) {
		return true
	}

	return false
}

// SetAzureDisk gets a reference to the given AzureDiskTarget and assigns it to the AzureDisk field.
func (o *AzureDiskRestoreDestination) SetAzureDisk(v AzureDiskTarget) {
	o.AzureDisk = &v
}

func (o AzureDiskRestoreDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureDiskRestoreDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AzureDisk) {
		toSerialize["azureDisk"] = o.AzureDisk
	}
	return toSerialize, nil
}

type NullableAzureDiskRestoreDestination struct {
	value *AzureDiskRestoreDestination
	isSet bool
}

func (v NullableAzureDiskRestoreDestination) Get() *AzureDiskRestoreDestination {
	return v.value
}

func (v *NullableAzureDiskRestoreDestination) Set(val *AzureDiskRestoreDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureDiskRestoreDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureDiskRestoreDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureDiskRestoreDestination(val *AzureDiskRestoreDestination) *NullableAzureDiskRestoreDestination {
	return &NullableAzureDiskRestoreDestination{value: val, isSet: true}
}

func (v NullableAzureDiskRestoreDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureDiskRestoreDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


