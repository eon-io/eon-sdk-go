/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the AzureSqlDatabaseRestoreDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureSqlDatabaseRestoreDestination{}

// AzureSqlDatabaseRestoreDestination struct for AzureSqlDatabaseRestoreDestination
type AzureSqlDatabaseRestoreDestination struct {
	AzureSqlDatabase *AzureSqlDatabaseRestoreTarget `json:"azureSqlDatabase,omitempty"`
}

// NewAzureSqlDatabaseRestoreDestination instantiates a new AzureSqlDatabaseRestoreDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureSqlDatabaseRestoreDestination() *AzureSqlDatabaseRestoreDestination {
	this := AzureSqlDatabaseRestoreDestination{}
	return &this
}

// NewAzureSqlDatabaseRestoreDestinationWithDefaults instantiates a new AzureSqlDatabaseRestoreDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureSqlDatabaseRestoreDestinationWithDefaults() *AzureSqlDatabaseRestoreDestination {
	this := AzureSqlDatabaseRestoreDestination{}
	return &this
}

// GetAzureSqlDatabase returns the AzureSqlDatabase field value if set, zero value otherwise.
func (o *AzureSqlDatabaseRestoreDestination) GetAzureSqlDatabase() AzureSqlDatabaseRestoreTarget {
	if o == nil || IsNil(o.AzureSqlDatabase) {
		var ret AzureSqlDatabaseRestoreTarget
		return ret
	}
	return *o.AzureSqlDatabase
}

// GetAzureSqlDatabaseOk returns a tuple with the AzureSqlDatabase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureSqlDatabaseRestoreDestination) GetAzureSqlDatabaseOk() (*AzureSqlDatabaseRestoreTarget, bool) {
	if o == nil || IsNil(o.AzureSqlDatabase) {
		return nil, false
	}
	return o.AzureSqlDatabase, true
}

// HasAzureSqlDatabase returns a boolean if a field has been set.
func (o *AzureSqlDatabaseRestoreDestination) HasAzureSqlDatabase() bool {
	if o != nil && !IsNil(o.AzureSqlDatabase) {
		return true
	}

	return false
}

// SetAzureSqlDatabase gets a reference to the given AzureSqlDatabaseRestoreTarget and assigns it to the AzureSqlDatabase field.
func (o *AzureSqlDatabaseRestoreDestination) SetAzureSqlDatabase(v AzureSqlDatabaseRestoreTarget) {
	o.AzureSqlDatabase = &v
}

func (o AzureSqlDatabaseRestoreDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureSqlDatabaseRestoreDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AzureSqlDatabase) {
		toSerialize["azureSqlDatabase"] = o.AzureSqlDatabase
	}
	return toSerialize, nil
}

type NullableAzureSqlDatabaseRestoreDestination struct {
	value *AzureSqlDatabaseRestoreDestination
	isSet bool
}

func (v NullableAzureSqlDatabaseRestoreDestination) Get() *AzureSqlDatabaseRestoreDestination {
	return v.value
}

func (v *NullableAzureSqlDatabaseRestoreDestination) Set(val *AzureSqlDatabaseRestoreDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureSqlDatabaseRestoreDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureSqlDatabaseRestoreDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureSqlDatabaseRestoreDestination(val *AzureSqlDatabaseRestoreDestination) *NullableAzureSqlDatabaseRestoreDestination {
	return &NullableAzureSqlDatabaseRestoreDestination{value: val, isSet: true}
}

func (v NullableAzureSqlDatabaseRestoreDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureSqlDatabaseRestoreDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


