/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the Classifications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Classifications{}

// Classifications Resource classification details.
type Classifications struct {
	DataClassesDetails *DataClassesDetails `json:"dataClassesDetails,omitempty"`
	EnvironmentDetails *EnvironmentDetails `json:"environmentDetails,omitempty"`
	AppsDetails *AppsDetails `json:"appsDetails,omitempty"`
}

// NewClassifications instantiates a new Classifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClassifications() *Classifications {
	this := Classifications{}
	return &this
}

// NewClassificationsWithDefaults instantiates a new Classifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClassificationsWithDefaults() *Classifications {
	this := Classifications{}
	return &this
}

// GetDataClassesDetails returns the DataClassesDetails field value if set, zero value otherwise.
func (o *Classifications) GetDataClassesDetails() DataClassesDetails {
	if o == nil || IsNil(o.DataClassesDetails) {
		var ret DataClassesDetails
		return ret
	}
	return *o.DataClassesDetails
}

// GetDataClassesDetailsOk returns a tuple with the DataClassesDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Classifications) GetDataClassesDetailsOk() (*DataClassesDetails, bool) {
	if o == nil || IsNil(o.DataClassesDetails) {
		return nil, false
	}
	return o.DataClassesDetails, true
}

// HasDataClassesDetails returns a boolean if a field has been set.
func (o *Classifications) HasDataClassesDetails() bool {
	if o != nil && !IsNil(o.DataClassesDetails) {
		return true
	}

	return false
}

// SetDataClassesDetails gets a reference to the given DataClassesDetails and assigns it to the DataClassesDetails field.
func (o *Classifications) SetDataClassesDetails(v DataClassesDetails) {
	o.DataClassesDetails = &v
}

// GetEnvironmentDetails returns the EnvironmentDetails field value if set, zero value otherwise.
func (o *Classifications) GetEnvironmentDetails() EnvironmentDetails {
	if o == nil || IsNil(o.EnvironmentDetails) {
		var ret EnvironmentDetails
		return ret
	}
	return *o.EnvironmentDetails
}

// GetEnvironmentDetailsOk returns a tuple with the EnvironmentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Classifications) GetEnvironmentDetailsOk() (*EnvironmentDetails, bool) {
	if o == nil || IsNil(o.EnvironmentDetails) {
		return nil, false
	}
	return o.EnvironmentDetails, true
}

// HasEnvironmentDetails returns a boolean if a field has been set.
func (o *Classifications) HasEnvironmentDetails() bool {
	if o != nil && !IsNil(o.EnvironmentDetails) {
		return true
	}

	return false
}

// SetEnvironmentDetails gets a reference to the given EnvironmentDetails and assigns it to the EnvironmentDetails field.
func (o *Classifications) SetEnvironmentDetails(v EnvironmentDetails) {
	o.EnvironmentDetails = &v
}

// GetAppsDetails returns the AppsDetails field value if set, zero value otherwise.
func (o *Classifications) GetAppsDetails() AppsDetails {
	if o == nil || IsNil(o.AppsDetails) {
		var ret AppsDetails
		return ret
	}
	return *o.AppsDetails
}

// GetAppsDetailsOk returns a tuple with the AppsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Classifications) GetAppsDetailsOk() (*AppsDetails, bool) {
	if o == nil || IsNil(o.AppsDetails) {
		return nil, false
	}
	return o.AppsDetails, true
}

// HasAppsDetails returns a boolean if a field has been set.
func (o *Classifications) HasAppsDetails() bool {
	if o != nil && !IsNil(o.AppsDetails) {
		return true
	}

	return false
}

// SetAppsDetails gets a reference to the given AppsDetails and assigns it to the AppsDetails field.
func (o *Classifications) SetAppsDetails(v AppsDetails) {
	o.AppsDetails = &v
}

func (o Classifications) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Classifications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataClassesDetails) {
		toSerialize["dataClassesDetails"] = o.DataClassesDetails
	}
	if !IsNil(o.EnvironmentDetails) {
		toSerialize["environmentDetails"] = o.EnvironmentDetails
	}
	if !IsNil(o.AppsDetails) {
		toSerialize["appsDetails"] = o.AppsDetails
	}
	return toSerialize, nil
}

type NullableClassifications struct {
	value *Classifications
	isSet bool
}

func (v NullableClassifications) Get() *Classifications {
	return v.value
}

func (v *NullableClassifications) Set(val *Classifications) {
	v.value = val
	v.isSet = true
}

func (v NullableClassifications) IsSet() bool {
	return v.isSet
}

func (v *NullableClassifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClassifications(val *Classifications) *NullableClassifications {
	return &NullableClassifications{value: val, isSet: true}
}

func (v NullableClassifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClassifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


