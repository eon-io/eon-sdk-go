/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"fmt"
)

// AccountInstallationMethod The method used to install the cloud role
type AccountInstallationMethod string

// List of AccountInstallationMethod
const (
	ACCOUNT_INSTALLATION_METHOD_UNSPECIFIED AccountInstallationMethod = "UNSPECIFIED"
	ACCOUNT_INSTALLATION_METHOD_CLOUDFORMATION AccountInstallationMethod = "CLOUDFORMATION"
	ACCOUNT_INSTALLATION_METHOD_TERRAFORM AccountInstallationMethod = "TERRAFORM"
	ACCOUNT_INSTALLATION_METHOD_BASH_SCRIPT AccountInstallationMethod = "BASH_SCRIPT"
)

// All allowed values of AccountInstallationMethod enum
var AllowedAccountInstallationMethodEnumValues = []AccountInstallationMethod{
	"UNSPECIFIED",
	"CLOUDFORMATION",
	"TERRAFORM",
	"BASH_SCRIPT",
}

func (v *AccountInstallationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AccountInstallationMethod(value)
	for _, existing := range AllowedAccountInstallationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AccountInstallationMethod", value)
}

// NewAccountInstallationMethodFromValue returns a pointer to a valid AccountInstallationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccountInstallationMethodFromValue(v string) (*AccountInstallationMethod, error) {
	ev := AccountInstallationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AccountInstallationMethod: valid values are %v", v, AllowedAccountInstallationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccountInstallationMethod) IsValid() bool {
	for _, existing := range AllowedAccountInstallationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AccountInstallationMethod value
func (v AccountInstallationMethod) Ptr() *AccountInstallationMethod {
	return &v
}

type NullableAccountInstallationMethod struct {
	value *AccountInstallationMethod
	isSet bool
}

func (v NullableAccountInstallationMethod) Get() *AccountInstallationMethod {
	return v.value
}

func (v *NullableAccountInstallationMethod) Set(val *AccountInstallationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountInstallationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountInstallationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountInstallationMethod(val *AccountInstallationMethod) *NullableAccountInstallationMethod {
	return &NullableAccountInstallationMethod{value: val, isSet: true}
}

func (v NullableAccountInstallationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountInstallationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

