/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the ListBackupJobsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBackupJobsResponse{}

// ListBackupJobsResponse struct for ListBackupJobsResponse
type ListBackupJobsResponse struct {
	// List of retrieved backup jobs.
	Jobs []BackupJob `json:"jobs,omitempty"`
	// Cursor that points to the first record of the next page of results. Pass this value in the next request. 
	NextToken *string `json:"nextToken,omitempty"`
	// Total number of backup jobs that matched the filter options.
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewListBackupJobsResponse instantiates a new ListBackupJobsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBackupJobsResponse() *ListBackupJobsResponse {
	this := ListBackupJobsResponse{}
	return &this
}

// NewListBackupJobsResponseWithDefaults instantiates a new ListBackupJobsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBackupJobsResponseWithDefaults() *ListBackupJobsResponse {
	this := ListBackupJobsResponse{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *ListBackupJobsResponse) GetJobs() []BackupJob {
	if o == nil || IsNil(o.Jobs) {
		var ret []BackupJob
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobsResponse) GetJobsOk() ([]BackupJob, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *ListBackupJobsResponse) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []BackupJob and assigns it to the Jobs field.
func (o *ListBackupJobsResponse) SetJobs(v []BackupJob) {
	o.Jobs = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *ListBackupJobsResponse) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobsResponse) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *ListBackupJobsResponse) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *ListBackupJobsResponse) SetNextToken(v string) {
	o.NextToken = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ListBackupJobsResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBackupJobsResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ListBackupJobsResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *ListBackupJobsResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o ListBackupJobsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBackupJobsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	if !IsNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableListBackupJobsResponse struct {
	value *ListBackupJobsResponse
	isSet bool
}

func (v NullableListBackupJobsResponse) Get() *ListBackupJobsResponse {
	return v.value
}

func (v *NullableListBackupJobsResponse) Set(val *ListBackupJobsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListBackupJobsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListBackupJobsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBackupJobsResponse(val *ListBackupJobsResponse) *NullableListBackupJobsResponse {
	return &NullableListBackupJobsResponse{value: val, isSet: true}
}

func (v NullableListBackupJobsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBackupJobsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


