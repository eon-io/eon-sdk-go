/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SourceAccountCloudAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceAccountCloudAttributes{}

// SourceAccountCloudAttributes struct for SourceAccountCloudAttributes
type SourceAccountCloudAttributes struct {
	CloudProvider Provider `json:"cloudProvider"`
	Aws NullableAwsSourceAccountAttributes `json:"aws,omitempty"`
	Gcp NullableGcpSourceAccountAttributes `json:"gcp,omitempty"`
	Azure NullableAzureSourceAccountAttributes `json:"azure,omitempty"`
}

type _SourceAccountCloudAttributes SourceAccountCloudAttributes

// NewSourceAccountCloudAttributes instantiates a new SourceAccountCloudAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceAccountCloudAttributes(cloudProvider Provider) *SourceAccountCloudAttributes {
	this := SourceAccountCloudAttributes{}
	this.CloudProvider = cloudProvider
	return &this
}

// NewSourceAccountCloudAttributesWithDefaults instantiates a new SourceAccountCloudAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceAccountCloudAttributesWithDefaults() *SourceAccountCloudAttributes {
	this := SourceAccountCloudAttributes{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value
func (o *SourceAccountCloudAttributes) GetCloudProvider() Provider {
	if o == nil {
		var ret Provider
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCloudAttributes) GetCloudProviderOk() (*Provider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *SourceAccountCloudAttributes) SetCloudProvider(v Provider) {
	o.CloudProvider = v
}

// GetAws returns the Aws field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SourceAccountCloudAttributes) GetAws() AwsSourceAccountAttributes {
	if o == nil || IsNil(o.Aws.Get()) {
		var ret AwsSourceAccountAttributes
		return ret
	}
	return *o.Aws.Get()
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SourceAccountCloudAttributes) GetAwsOk() (*AwsSourceAccountAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aws.Get(), o.Aws.IsSet()
}

// HasAws returns a boolean if a field has been set.
func (o *SourceAccountCloudAttributes) HasAws() bool {
	if o != nil && o.Aws.IsSet() {
		return true
	}

	return false
}

// SetAws gets a reference to the given NullableAwsSourceAccountAttributes and assigns it to the Aws field.
func (o *SourceAccountCloudAttributes) SetAws(v AwsSourceAccountAttributes) {
	o.Aws.Set(&v)
}
// SetAwsNil sets the value for Aws to be an explicit nil
func (o *SourceAccountCloudAttributes) SetAwsNil() {
	o.Aws.Set(nil)
}

// UnsetAws ensures that no value is present for Aws, not even an explicit nil
func (o *SourceAccountCloudAttributes) UnsetAws() {
	o.Aws.Unset()
}

// GetGcp returns the Gcp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SourceAccountCloudAttributes) GetGcp() GcpSourceAccountAttributes {
	if o == nil || IsNil(o.Gcp.Get()) {
		var ret GcpSourceAccountAttributes
		return ret
	}
	return *o.Gcp.Get()
}

// GetGcpOk returns a tuple with the Gcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SourceAccountCloudAttributes) GetGcpOk() (*GcpSourceAccountAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return o.Gcp.Get(), o.Gcp.IsSet()
}

// HasGcp returns a boolean if a field has been set.
func (o *SourceAccountCloudAttributes) HasGcp() bool {
	if o != nil && o.Gcp.IsSet() {
		return true
	}

	return false
}

// SetGcp gets a reference to the given NullableGcpSourceAccountAttributes and assigns it to the Gcp field.
func (o *SourceAccountCloudAttributes) SetGcp(v GcpSourceAccountAttributes) {
	o.Gcp.Set(&v)
}
// SetGcpNil sets the value for Gcp to be an explicit nil
func (o *SourceAccountCloudAttributes) SetGcpNil() {
	o.Gcp.Set(nil)
}

// UnsetGcp ensures that no value is present for Gcp, not even an explicit nil
func (o *SourceAccountCloudAttributes) UnsetGcp() {
	o.Gcp.Unset()
}

// GetAzure returns the Azure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SourceAccountCloudAttributes) GetAzure() AzureSourceAccountAttributes {
	if o == nil || IsNil(o.Azure.Get()) {
		var ret AzureSourceAccountAttributes
		return ret
	}
	return *o.Azure.Get()
}

// GetAzureOk returns a tuple with the Azure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SourceAccountCloudAttributes) GetAzureOk() (*AzureSourceAccountAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return o.Azure.Get(), o.Azure.IsSet()
}

// HasAzure returns a boolean if a field has been set.
func (o *SourceAccountCloudAttributes) HasAzure() bool {
	if o != nil && o.Azure.IsSet() {
		return true
	}

	return false
}

// SetAzure gets a reference to the given NullableAzureSourceAccountAttributes and assigns it to the Azure field.
func (o *SourceAccountCloudAttributes) SetAzure(v AzureSourceAccountAttributes) {
	o.Azure.Set(&v)
}
// SetAzureNil sets the value for Azure to be an explicit nil
func (o *SourceAccountCloudAttributes) SetAzureNil() {
	o.Azure.Set(nil)
}

// UnsetAzure ensures that no value is present for Azure, not even an explicit nil
func (o *SourceAccountCloudAttributes) UnsetAzure() {
	o.Azure.Unset()
}

func (o SourceAccountCloudAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceAccountCloudAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloudProvider"] = o.CloudProvider
	if o.Aws.IsSet() {
		toSerialize["aws"] = o.Aws.Get()
	}
	if o.Gcp.IsSet() {
		toSerialize["gcp"] = o.Gcp.Get()
	}
	if o.Azure.IsSet() {
		toSerialize["azure"] = o.Azure.Get()
	}
	return toSerialize, nil
}

func (o *SourceAccountCloudAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProvider",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceAccountCloudAttributes := _SourceAccountCloudAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSourceAccountCloudAttributes)

	if err != nil {
		return err
	}

	*o = SourceAccountCloudAttributes(varSourceAccountCloudAttributes)

	return err
}

type NullableSourceAccountCloudAttributes struct {
	value *SourceAccountCloudAttributes
	isSet bool
}

func (v NullableSourceAccountCloudAttributes) Get() *SourceAccountCloudAttributes {
	return v.value
}

func (v *NullableSourceAccountCloudAttributes) Set(val *SourceAccountCloudAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceAccountCloudAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceAccountCloudAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceAccountCloudAttributes(val *SourceAccountCloudAttributes) *NullableSourceAccountCloudAttributes {
	return &NullableSourceAccountCloudAttributes{value: val, isSet: true}
}

func (v NullableSourceAccountCloudAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceAccountCloudAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


