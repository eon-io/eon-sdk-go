/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the RestoreAccountsFilterConditions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreAccountsFilterConditions{}

// RestoreAccountsFilterConditions Filter conditions. If omitted, no filtering is applied. 
type RestoreAccountsFilterConditions struct {
	Id *IdFilters `json:"id,omitempty"`
	ProviderAccountId *ProviderAccountIdFilters `json:"providerAccountId,omitempty"`
	AccountStatus *AccountStatusFilters `json:"accountStatus,omitempty"`
	CloudProvider *CloudProviderFilters `json:"cloudProvider,omitempty"`
	AccountName *AccountNameFilters `json:"accountName,omitempty"`
}

// NewRestoreAccountsFilterConditions instantiates a new RestoreAccountsFilterConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreAccountsFilterConditions() *RestoreAccountsFilterConditions {
	this := RestoreAccountsFilterConditions{}
	return &this
}

// NewRestoreAccountsFilterConditionsWithDefaults instantiates a new RestoreAccountsFilterConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreAccountsFilterConditionsWithDefaults() *RestoreAccountsFilterConditions {
	this := RestoreAccountsFilterConditions{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestoreAccountsFilterConditions) GetId() IdFilters {
	if o == nil || IsNil(o.Id) {
		var ret IdFilters
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccountsFilterConditions) GetIdOk() (*IdFilters, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestoreAccountsFilterConditions) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given IdFilters and assigns it to the Id field.
func (o *RestoreAccountsFilterConditions) SetId(v IdFilters) {
	o.Id = &v
}

// GetProviderAccountId returns the ProviderAccountId field value if set, zero value otherwise.
func (o *RestoreAccountsFilterConditions) GetProviderAccountId() ProviderAccountIdFilters {
	if o == nil || IsNil(o.ProviderAccountId) {
		var ret ProviderAccountIdFilters
		return ret
	}
	return *o.ProviderAccountId
}

// GetProviderAccountIdOk returns a tuple with the ProviderAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccountsFilterConditions) GetProviderAccountIdOk() (*ProviderAccountIdFilters, bool) {
	if o == nil || IsNil(o.ProviderAccountId) {
		return nil, false
	}
	return o.ProviderAccountId, true
}

// HasProviderAccountId returns a boolean if a field has been set.
func (o *RestoreAccountsFilterConditions) HasProviderAccountId() bool {
	if o != nil && !IsNil(o.ProviderAccountId) {
		return true
	}

	return false
}

// SetProviderAccountId gets a reference to the given ProviderAccountIdFilters and assigns it to the ProviderAccountId field.
func (o *RestoreAccountsFilterConditions) SetProviderAccountId(v ProviderAccountIdFilters) {
	o.ProviderAccountId = &v
}

// GetAccountStatus returns the AccountStatus field value if set, zero value otherwise.
func (o *RestoreAccountsFilterConditions) GetAccountStatus() AccountStatusFilters {
	if o == nil || IsNil(o.AccountStatus) {
		var ret AccountStatusFilters
		return ret
	}
	return *o.AccountStatus
}

// GetAccountStatusOk returns a tuple with the AccountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccountsFilterConditions) GetAccountStatusOk() (*AccountStatusFilters, bool) {
	if o == nil || IsNil(o.AccountStatus) {
		return nil, false
	}
	return o.AccountStatus, true
}

// HasAccountStatus returns a boolean if a field has been set.
func (o *RestoreAccountsFilterConditions) HasAccountStatus() bool {
	if o != nil && !IsNil(o.AccountStatus) {
		return true
	}

	return false
}

// SetAccountStatus gets a reference to the given AccountStatusFilters and assigns it to the AccountStatus field.
func (o *RestoreAccountsFilterConditions) SetAccountStatus(v AccountStatusFilters) {
	o.AccountStatus = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *RestoreAccountsFilterConditions) GetCloudProvider() CloudProviderFilters {
	if o == nil || IsNil(o.CloudProvider) {
		var ret CloudProviderFilters
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccountsFilterConditions) GetCloudProviderOk() (*CloudProviderFilters, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *RestoreAccountsFilterConditions) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given CloudProviderFilters and assigns it to the CloudProvider field.
func (o *RestoreAccountsFilterConditions) SetCloudProvider(v CloudProviderFilters) {
	o.CloudProvider = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *RestoreAccountsFilterConditions) GetAccountName() AccountNameFilters {
	if o == nil || IsNil(o.AccountName) {
		var ret AccountNameFilters
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreAccountsFilterConditions) GetAccountNameOk() (*AccountNameFilters, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *RestoreAccountsFilterConditions) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given AccountNameFilters and assigns it to the AccountName field.
func (o *RestoreAccountsFilterConditions) SetAccountName(v AccountNameFilters) {
	o.AccountName = &v
}

func (o RestoreAccountsFilterConditions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreAccountsFilterConditions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProviderAccountId) {
		toSerialize["providerAccountId"] = o.ProviderAccountId
	}
	if !IsNil(o.AccountStatus) {
		toSerialize["accountStatus"] = o.AccountStatus
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if !IsNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	return toSerialize, nil
}

type NullableRestoreAccountsFilterConditions struct {
	value *RestoreAccountsFilterConditions
	isSet bool
}

func (v NullableRestoreAccountsFilterConditions) Get() *RestoreAccountsFilterConditions {
	return v.value
}

func (v *NullableRestoreAccountsFilterConditions) Set(val *RestoreAccountsFilterConditions) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreAccountsFilterConditions) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreAccountsFilterConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreAccountsFilterConditions(val *RestoreAccountsFilterConditions) *NullableRestoreAccountsFilterConditions {
	return &NullableRestoreAccountsFilterConditions{value: val, isSet: true}
}

func (v NullableRestoreAccountsFilterConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreAccountsFilterConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


