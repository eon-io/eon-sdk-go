/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the EksNamespaceRestoreDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EksNamespaceRestoreDestination{}

// EksNamespaceRestoreDestination struct for EksNamespaceRestoreDestination
type EksNamespaceRestoreDestination struct {
	S3Bucket *S3RestoreTarget `json:"s3Bucket,omitempty"`
}

// NewEksNamespaceRestoreDestination instantiates a new EksNamespaceRestoreDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEksNamespaceRestoreDestination() *EksNamespaceRestoreDestination {
	this := EksNamespaceRestoreDestination{}
	return &this
}

// NewEksNamespaceRestoreDestinationWithDefaults instantiates a new EksNamespaceRestoreDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEksNamespaceRestoreDestinationWithDefaults() *EksNamespaceRestoreDestination {
	this := EksNamespaceRestoreDestination{}
	return &this
}

// GetS3Bucket returns the S3Bucket field value if set, zero value otherwise.
func (o *EksNamespaceRestoreDestination) GetS3Bucket() S3RestoreTarget {
	if o == nil || IsNil(o.S3Bucket) {
		var ret S3RestoreTarget
		return ret
	}
	return *o.S3Bucket
}

// GetS3BucketOk returns a tuple with the S3Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EksNamespaceRestoreDestination) GetS3BucketOk() (*S3RestoreTarget, bool) {
	if o == nil || IsNil(o.S3Bucket) {
		return nil, false
	}
	return o.S3Bucket, true
}

// HasS3Bucket returns a boolean if a field has been set.
func (o *EksNamespaceRestoreDestination) HasS3Bucket() bool {
	if o != nil && !IsNil(o.S3Bucket) {
		return true
	}

	return false
}

// SetS3Bucket gets a reference to the given S3RestoreTarget and assigns it to the S3Bucket field.
func (o *EksNamespaceRestoreDestination) SetS3Bucket(v S3RestoreTarget) {
	o.S3Bucket = &v
}

func (o EksNamespaceRestoreDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EksNamespaceRestoreDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.S3Bucket) {
		toSerialize["s3Bucket"] = o.S3Bucket
	}
	return toSerialize, nil
}

type NullableEksNamespaceRestoreDestination struct {
	value *EksNamespaceRestoreDestination
	isSet bool
}

func (v NullableEksNamespaceRestoreDestination) Get() *EksNamespaceRestoreDestination {
	return v.value
}

func (v *NullableEksNamespaceRestoreDestination) Set(val *EksNamespaceRestoreDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableEksNamespaceRestoreDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableEksNamespaceRestoreDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEksNamespaceRestoreDestination(val *EksNamespaceRestoreDestination) *NullableEksNamespaceRestoreDestination {
	return &NullableEksNamespaceRestoreDestination{value: val, isSet: true}
}

func (v NullableEksNamespaceRestoreDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEksNamespaceRestoreDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


