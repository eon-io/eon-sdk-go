/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DestinationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DestinationDetails{}

// DestinationDetails struct for DestinationDetails
type DestinationDetails struct {
	// Eon-assigned restore account ID.
	RestoreAccountId string `json:"restoreAccountId"`
	// Cloud-provider-assigned restore account ID.
	ProviderAccountId string   `json:"providerAccountId"`
	CloudProvider     Provider `json:"cloudProvider"`
	// Region the data is restored to.
	Region string `json:"region"`
}

type _DestinationDetails DestinationDetails

// NewDestinationDetails instantiates a new DestinationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationDetails(restoreAccountId string, providerAccountId string, cloudProvider Provider, region string) *DestinationDetails {
	this := DestinationDetails{}
	this.RestoreAccountId = restoreAccountId
	this.ProviderAccountId = providerAccountId
	this.CloudProvider = cloudProvider
	this.Region = region
	return &this
}

// NewDestinationDetailsWithDefaults instantiates a new DestinationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationDetailsWithDefaults() *DestinationDetails {
	this := DestinationDetails{}
	return &this
}

// GetRestoreAccountId returns the RestoreAccountId field value
func (o *DestinationDetails) GetRestoreAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreAccountId
}

// GetRestoreAccountIdOk returns a tuple with the RestoreAccountId field value
// and a boolean to check if the value has been set.
func (o *DestinationDetails) GetRestoreAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreAccountId, true
}

// SetRestoreAccountId sets field value
func (o *DestinationDetails) SetRestoreAccountId(v string) {
	o.RestoreAccountId = v
}

// GetProviderAccountId returns the ProviderAccountId field value
func (o *DestinationDetails) GetProviderAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderAccountId
}

// GetProviderAccountIdOk returns a tuple with the ProviderAccountId field value
// and a boolean to check if the value has been set.
func (o *DestinationDetails) GetProviderAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderAccountId, true
}

// SetProviderAccountId sets field value
func (o *DestinationDetails) SetProviderAccountId(v string) {
	o.ProviderAccountId = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *DestinationDetails) GetCloudProvider() Provider {
	if o == nil {
		var ret Provider
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *DestinationDetails) GetCloudProviderOk() (*Provider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *DestinationDetails) SetCloudProvider(v Provider) {
	o.CloudProvider = v
}

// GetRegion returns the Region field value
func (o *DestinationDetails) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *DestinationDetails) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *DestinationDetails) SetRegion(v string) {
	o.Region = v
}

func (o DestinationDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DestinationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["restoreAccountId"] = o.RestoreAccountId
	toSerialize["providerAccountId"] = o.ProviderAccountId
	toSerialize["cloudProvider"] = o.CloudProvider
	toSerialize["region"] = o.Region
	return toSerialize, nil
}

func (o *DestinationDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"restoreAccountId",
		"providerAccountId",
		"cloudProvider",
		"region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDestinationDetails := _DestinationDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDestinationDetails)

	if err != nil {
		return err
	}

	*o = DestinationDetails(varDestinationDetails)

	return err
}

type NullableDestinationDetails struct {
	value *DestinationDetails
	isSet bool
}

func (v NullableDestinationDetails) Get() *DestinationDetails {
	return v.value
}

func (v *NullableDestinationDetails) Set(val *DestinationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationDetails(val *DestinationDetails) *NullableDestinationDetails {
	return &NullableDestinationDetails{value: val, isSet: true}
}

func (v NullableDestinationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
