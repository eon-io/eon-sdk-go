/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListResourcesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResourcesResponse{}

// ListResourcesResponse struct for ListResourcesResponse
type ListResourcesResponse struct {
	// List of retrieved resources.
	Resources []InventoryResource `json:"resources"`
	// Cursor that points to the first record of the next page of results. Pass this value in the next request. 
	NextToken *string `json:"nextToken,omitempty"`
	// Total number of resources that matched the filter options.
	TotalCount *int32 `json:"totalCount,omitempty"`
}

type _ListResourcesResponse ListResourcesResponse

// NewListResourcesResponse instantiates a new ListResourcesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResourcesResponse(resources []InventoryResource) *ListResourcesResponse {
	this := ListResourcesResponse{}
	this.Resources = resources
	return &this
}

// NewListResourcesResponseWithDefaults instantiates a new ListResourcesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResourcesResponseWithDefaults() *ListResourcesResponse {
	this := ListResourcesResponse{}
	return &this
}

// GetResources returns the Resources field value
func (o *ListResourcesResponse) GetResources() []InventoryResource {
	if o == nil {
		var ret []InventoryResource
		return ret
	}

	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value
// and a boolean to check if the value has been set.
func (o *ListResourcesResponse) GetResourcesOk() ([]InventoryResource, bool) {
	if o == nil {
		return nil, false
	}
	return o.Resources, true
}

// SetResources sets field value
func (o *ListResourcesResponse) SetResources(v []InventoryResource) {
	o.Resources = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise.
func (o *ListResourcesResponse) GetNextToken() string {
	if o == nil || IsNil(o.NextToken) {
		var ret string
		return ret
	}
	return *o.NextToken
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesResponse) GetNextTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextToken) {
		return nil, false
	}
	return o.NextToken, true
}

// HasNextToken returns a boolean if a field has been set.
func (o *ListResourcesResponse) HasNextToken() bool {
	if o != nil && !IsNil(o.NextToken) {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given string and assigns it to the NextToken field.
func (o *ListResourcesResponse) SetNextToken(v string) {
	o.NextToken = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ListResourcesResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ListResourcesResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *ListResourcesResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o ListResourcesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResourcesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resources"] = o.Resources
	if !IsNil(o.NextToken) {
		toSerialize["nextToken"] = o.NextToken
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

func (o *ListResourcesResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resources",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListResourcesResponse := _ListResourcesResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListResourcesResponse)

	if err != nil {
		return err
	}

	*o = ListResourcesResponse(varListResourcesResponse)

	return err
}

type NullableListResourcesResponse struct {
	value *ListResourcesResponse
	isSet bool
}

func (v NullableListResourcesResponse) Get() *ListResourcesResponse {
	return v.value
}

func (v *NullableListResourcesResponse) Set(val *ListResourcesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListResourcesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListResourcesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResourcesResponse(val *ListResourcesResponse) *NullableListResourcesResponse {
	return &NullableListResourcesResponse{value: val, isSet: true}
}

func (v NullableListResourcesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResourcesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


