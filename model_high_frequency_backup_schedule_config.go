/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the HighFrequencyBackupScheduleConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HighFrequencyBackupScheduleConfig{}

// HighFrequencyBackupScheduleConfig struct for HighFrequencyBackupScheduleConfig
type HighFrequencyBackupScheduleConfig struct {
	Frequency      *HighFrequencyBackupScheduleFrequency `json:"frequency,omitempty"`
	IntervalConfig NullableHighFrequencyIntervalConfig   `json:"intervalConfig,omitempty"`
	DailyConfig    NullableDailyConfig                   `json:"dailyConfig,omitempty"`
	WeeklyConfig   NullableWeeklyConfig                  `json:"weeklyConfig,omitempty"`
	MonthlyConfig  NullableMonthlyConfig                 `json:"monthlyConfig,omitempty"`
	AnnuallyConfig NullableAnnuallyConfig                `json:"annuallyConfig,omitempty"`
}

// NewHighFrequencyBackupScheduleConfig instantiates a new HighFrequencyBackupScheduleConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHighFrequencyBackupScheduleConfig() *HighFrequencyBackupScheduleConfig {
	this := HighFrequencyBackupScheduleConfig{}
	return &this
}

// NewHighFrequencyBackupScheduleConfigWithDefaults instantiates a new HighFrequencyBackupScheduleConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHighFrequencyBackupScheduleConfigWithDefaults() *HighFrequencyBackupScheduleConfig {
	this := HighFrequencyBackupScheduleConfig{}
	return &this
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *HighFrequencyBackupScheduleConfig) GetFrequency() HighFrequencyBackupScheduleFrequency {
	if o == nil || IsNil(o.Frequency) {
		var ret HighFrequencyBackupScheduleFrequency
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HighFrequencyBackupScheduleConfig) GetFrequencyOk() (*HighFrequencyBackupScheduleFrequency, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *HighFrequencyBackupScheduleConfig) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given HighFrequencyBackupScheduleFrequency and assigns it to the Frequency field.
func (o *HighFrequencyBackupScheduleConfig) SetFrequency(v HighFrequencyBackupScheduleFrequency) {
	o.Frequency = &v
}

// GetIntervalConfig returns the IntervalConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HighFrequencyBackupScheduleConfig) GetIntervalConfig() HighFrequencyIntervalConfig {
	if o == nil || IsNil(o.IntervalConfig.Get()) {
		var ret HighFrequencyIntervalConfig
		return ret
	}
	return *o.IntervalConfig.Get()
}

// GetIntervalConfigOk returns a tuple with the IntervalConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HighFrequencyBackupScheduleConfig) GetIntervalConfigOk() (*HighFrequencyIntervalConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntervalConfig.Get(), o.IntervalConfig.IsSet()
}

// HasIntervalConfig returns a boolean if a field has been set.
func (o *HighFrequencyBackupScheduleConfig) HasIntervalConfig() bool {
	if o != nil && o.IntervalConfig.IsSet() {
		return true
	}

	return false
}

// SetIntervalConfig gets a reference to the given NullableHighFrequencyIntervalConfig and assigns it to the IntervalConfig field.
func (o *HighFrequencyBackupScheduleConfig) SetIntervalConfig(v HighFrequencyIntervalConfig) {
	o.IntervalConfig.Set(&v)
}

// SetIntervalConfigNil sets the value for IntervalConfig to be an explicit nil
func (o *HighFrequencyBackupScheduleConfig) SetIntervalConfigNil() {
	o.IntervalConfig.Set(nil)
}

// UnsetIntervalConfig ensures that no value is present for IntervalConfig, not even an explicit nil
func (o *HighFrequencyBackupScheduleConfig) UnsetIntervalConfig() {
	o.IntervalConfig.Unset()
}

// GetDailyConfig returns the DailyConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HighFrequencyBackupScheduleConfig) GetDailyConfig() DailyConfig {
	if o == nil || IsNil(o.DailyConfig.Get()) {
		var ret DailyConfig
		return ret
	}
	return *o.DailyConfig.Get()
}

// GetDailyConfigOk returns a tuple with the DailyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HighFrequencyBackupScheduleConfig) GetDailyConfigOk() (*DailyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.DailyConfig.Get(), o.DailyConfig.IsSet()
}

// HasDailyConfig returns a boolean if a field has been set.
func (o *HighFrequencyBackupScheduleConfig) HasDailyConfig() bool {
	if o != nil && o.DailyConfig.IsSet() {
		return true
	}

	return false
}

// SetDailyConfig gets a reference to the given NullableDailyConfig and assigns it to the DailyConfig field.
func (o *HighFrequencyBackupScheduleConfig) SetDailyConfig(v DailyConfig) {
	o.DailyConfig.Set(&v)
}

// SetDailyConfigNil sets the value for DailyConfig to be an explicit nil
func (o *HighFrequencyBackupScheduleConfig) SetDailyConfigNil() {
	o.DailyConfig.Set(nil)
}

// UnsetDailyConfig ensures that no value is present for DailyConfig, not even an explicit nil
func (o *HighFrequencyBackupScheduleConfig) UnsetDailyConfig() {
	o.DailyConfig.Unset()
}

// GetWeeklyConfig returns the WeeklyConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HighFrequencyBackupScheduleConfig) GetWeeklyConfig() WeeklyConfig {
	if o == nil || IsNil(o.WeeklyConfig.Get()) {
		var ret WeeklyConfig
		return ret
	}
	return *o.WeeklyConfig.Get()
}

// GetWeeklyConfigOk returns a tuple with the WeeklyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HighFrequencyBackupScheduleConfig) GetWeeklyConfigOk() (*WeeklyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.WeeklyConfig.Get(), o.WeeklyConfig.IsSet()
}

// HasWeeklyConfig returns a boolean if a field has been set.
func (o *HighFrequencyBackupScheduleConfig) HasWeeklyConfig() bool {
	if o != nil && o.WeeklyConfig.IsSet() {
		return true
	}

	return false
}

// SetWeeklyConfig gets a reference to the given NullableWeeklyConfig and assigns it to the WeeklyConfig field.
func (o *HighFrequencyBackupScheduleConfig) SetWeeklyConfig(v WeeklyConfig) {
	o.WeeklyConfig.Set(&v)
}

// SetWeeklyConfigNil sets the value for WeeklyConfig to be an explicit nil
func (o *HighFrequencyBackupScheduleConfig) SetWeeklyConfigNil() {
	o.WeeklyConfig.Set(nil)
}

// UnsetWeeklyConfig ensures that no value is present for WeeklyConfig, not even an explicit nil
func (o *HighFrequencyBackupScheduleConfig) UnsetWeeklyConfig() {
	o.WeeklyConfig.Unset()
}

// GetMonthlyConfig returns the MonthlyConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HighFrequencyBackupScheduleConfig) GetMonthlyConfig() MonthlyConfig {
	if o == nil || IsNil(o.MonthlyConfig.Get()) {
		var ret MonthlyConfig
		return ret
	}
	return *o.MonthlyConfig.Get()
}

// GetMonthlyConfigOk returns a tuple with the MonthlyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HighFrequencyBackupScheduleConfig) GetMonthlyConfigOk() (*MonthlyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.MonthlyConfig.Get(), o.MonthlyConfig.IsSet()
}

// HasMonthlyConfig returns a boolean if a field has been set.
func (o *HighFrequencyBackupScheduleConfig) HasMonthlyConfig() bool {
	if o != nil && o.MonthlyConfig.IsSet() {
		return true
	}

	return false
}

// SetMonthlyConfig gets a reference to the given NullableMonthlyConfig and assigns it to the MonthlyConfig field.
func (o *HighFrequencyBackupScheduleConfig) SetMonthlyConfig(v MonthlyConfig) {
	o.MonthlyConfig.Set(&v)
}

// SetMonthlyConfigNil sets the value for MonthlyConfig to be an explicit nil
func (o *HighFrequencyBackupScheduleConfig) SetMonthlyConfigNil() {
	o.MonthlyConfig.Set(nil)
}

// UnsetMonthlyConfig ensures that no value is present for MonthlyConfig, not even an explicit nil
func (o *HighFrequencyBackupScheduleConfig) UnsetMonthlyConfig() {
	o.MonthlyConfig.Unset()
}

// GetAnnuallyConfig returns the AnnuallyConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HighFrequencyBackupScheduleConfig) GetAnnuallyConfig() AnnuallyConfig {
	if o == nil || IsNil(o.AnnuallyConfig.Get()) {
		var ret AnnuallyConfig
		return ret
	}
	return *o.AnnuallyConfig.Get()
}

// GetAnnuallyConfigOk returns a tuple with the AnnuallyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HighFrequencyBackupScheduleConfig) GetAnnuallyConfigOk() (*AnnuallyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.AnnuallyConfig.Get(), o.AnnuallyConfig.IsSet()
}

// HasAnnuallyConfig returns a boolean if a field has been set.
func (o *HighFrequencyBackupScheduleConfig) HasAnnuallyConfig() bool {
	if o != nil && o.AnnuallyConfig.IsSet() {
		return true
	}

	return false
}

// SetAnnuallyConfig gets a reference to the given NullableAnnuallyConfig and assigns it to the AnnuallyConfig field.
func (o *HighFrequencyBackupScheduleConfig) SetAnnuallyConfig(v AnnuallyConfig) {
	o.AnnuallyConfig.Set(&v)
}

// SetAnnuallyConfigNil sets the value for AnnuallyConfig to be an explicit nil
func (o *HighFrequencyBackupScheduleConfig) SetAnnuallyConfigNil() {
	o.AnnuallyConfig.Set(nil)
}

// UnsetAnnuallyConfig ensures that no value is present for AnnuallyConfig, not even an explicit nil
func (o *HighFrequencyBackupScheduleConfig) UnsetAnnuallyConfig() {
	o.AnnuallyConfig.Unset()
}

func (o HighFrequencyBackupScheduleConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HighFrequencyBackupScheduleConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if o.IntervalConfig.IsSet() {
		toSerialize["intervalConfig"] = o.IntervalConfig.Get()
	}
	if o.DailyConfig.IsSet() {
		toSerialize["dailyConfig"] = o.DailyConfig.Get()
	}
	if o.WeeklyConfig.IsSet() {
		toSerialize["weeklyConfig"] = o.WeeklyConfig.Get()
	}
	if o.MonthlyConfig.IsSet() {
		toSerialize["monthlyConfig"] = o.MonthlyConfig.Get()
	}
	if o.AnnuallyConfig.IsSet() {
		toSerialize["annuallyConfig"] = o.AnnuallyConfig.Get()
	}
	return toSerialize, nil
}

type NullableHighFrequencyBackupScheduleConfig struct {
	value *HighFrequencyBackupScheduleConfig
	isSet bool
}

func (v NullableHighFrequencyBackupScheduleConfig) Get() *HighFrequencyBackupScheduleConfig {
	return v.value
}

func (v *NullableHighFrequencyBackupScheduleConfig) Set(val *HighFrequencyBackupScheduleConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHighFrequencyBackupScheduleConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHighFrequencyBackupScheduleConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHighFrequencyBackupScheduleConfig(val *HighFrequencyBackupScheduleConfig) *NullableHighFrequencyBackupScheduleConfig {
	return &NullableHighFrequencyBackupScheduleConfig{value: val, isSet: true}
}

func (v NullableHighFrequencyBackupScheduleConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHighFrequencyBackupScheduleConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
