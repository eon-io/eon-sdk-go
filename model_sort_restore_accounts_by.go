/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SortRestoreAccountsBy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SortRestoreAccountsBy{}

// SortRestoreAccountsBy List of sorting options. Sorting is applied in the order passed in the list. 
type SortRestoreAccountsBy struct {
	Field RestoreAccountSortField `json:"field"`
	Order SortOrder `json:"order"`
}

type _SortRestoreAccountsBy SortRestoreAccountsBy

// NewSortRestoreAccountsBy instantiates a new SortRestoreAccountsBy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSortRestoreAccountsBy(field RestoreAccountSortField, order SortOrder) *SortRestoreAccountsBy {
	this := SortRestoreAccountsBy{}
	this.Field = field
	this.Order = order
	return &this
}

// NewSortRestoreAccountsByWithDefaults instantiates a new SortRestoreAccountsBy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSortRestoreAccountsByWithDefaults() *SortRestoreAccountsBy {
	this := SortRestoreAccountsBy{}
	return &this
}

// GetField returns the Field field value
func (o *SortRestoreAccountsBy) GetField() RestoreAccountSortField {
	if o == nil {
		var ret RestoreAccountSortField
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *SortRestoreAccountsBy) GetFieldOk() (*RestoreAccountSortField, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *SortRestoreAccountsBy) SetField(v RestoreAccountSortField) {
	o.Field = v
}

// GetOrder returns the Order field value
func (o *SortRestoreAccountsBy) GetOrder() SortOrder {
	if o == nil {
		var ret SortOrder
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *SortRestoreAccountsBy) GetOrderOk() (*SortOrder, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *SortRestoreAccountsBy) SetOrder(v SortOrder) {
	o.Order = v
}

func (o SortRestoreAccountsBy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SortRestoreAccountsBy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["order"] = o.Order
	return toSerialize, nil
}

func (o *SortRestoreAccountsBy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"field",
		"order",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSortRestoreAccountsBy := _SortRestoreAccountsBy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	//decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSortRestoreAccountsBy)

	if err != nil {
		return err
	}

	*o = SortRestoreAccountsBy(varSortRestoreAccountsBy)

	return err
}

type NullableSortRestoreAccountsBy struct {
	value *SortRestoreAccountsBy
	isSet bool
}

func (v NullableSortRestoreAccountsBy) Get() *SortRestoreAccountsBy {
	return v.value
}

func (v *NullableSortRestoreAccountsBy) Set(val *SortRestoreAccountsBy) {
	v.value = val
	v.isSet = true
}

func (v NullableSortRestoreAccountsBy) IsSet() bool {
	return v.isSet
}

func (v *NullableSortRestoreAccountsBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSortRestoreAccountsBy(val *SortRestoreAccountsBy) *NullableSortRestoreAccountsBy {
	return &NullableSortRestoreAccountsBy{value: val, isSet: true}
}

func (v NullableSortRestoreAccountsBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSortRestoreAccountsBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


