/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"fmt"
)

// MeteringDimension Type of resource usage being metered and billed across different cloud providers. Each dimension represents a specific billable resource type, such as compute instances, storage volumes, database services, or data transfer. Used to categorize costs by service type for detailed analysis and chargeback reporting. 
type MeteringDimension string

// List of MeteringDimension
const (
	AWS_EC2_METERING_DIMENSION MeteringDimension = "AWS_EC2_METERING_DIMENSION"
	AWS_RDS_METERING_DIMENSION MeteringDimension = "AWS_RDS_METERING_DIMENSION"
	AWS_S3_METERING_DIMENSION MeteringDimension = "AWS_S3_METERING_DIMENSION"
	AWS_DYNAMO_DB_METERING_DIMENSION MeteringDimension = "AWS_DYNAMO_DB_METERING_DIMENSION"
	AWS_EKS_METERING_DIMENSION MeteringDimension = "AWS_EKS_METERING_DIMENSION"
	AZURE_VIRTUAL_MACHINE_METERING_DIMENSION MeteringDimension = "AZURE_VIRTUAL_MACHINE_METERING_DIMENSION"
	AZURE_STORAGE_ACCOUNT_METERING_DIMENSION MeteringDimension = "AZURE_STORAGE_ACCOUNT_METERING_DIMENSION"
	AZURE_SQL_VIRTUAL_MACHINE_METERING_DIMENSION MeteringDimension = "AZURE_SQL_VIRTUAL_MACHINE_METERING_DIMENSION"
	GCP_VM_INSTANCE_METERING_DIMENSION MeteringDimension = "GCP_VM_INSTANCE_METERING_DIMENSION"
	GCP_CLOUD_STORAGE_METERING_DIMENSION MeteringDimension = "GCP_CLOUD_STORAGE_METERING_DIMENSION"
	GCP_CLOUD_SQL_POSTGRES_SQL_METERING_DIMENSION MeteringDimension = "GCP_CLOUD_SQL_POSTGRES_SQL_METERING_DIMENSION"
	GCP_CLOUD_SQL_MYSQL_METERING_DIMENSION MeteringDimension = "GCP_CLOUD_SQL_MYSQL_METERING_DIMENSION"
	GCP_CLOUD_SQL_SQL_SERVER_METERING_DIMENSION MeteringDimension = "GCP_CLOUD_SQL_SQL_SERVER_METERING_DIMENSION"
	DATA_TRANSFER_METERING_DIMENSION MeteringDimension = "DATA_TRANSFER_METERING_DIMENSION"
	CROSS_CLOUD_DATA_TRANSFER_METERING_DIMENSION MeteringDimension = "CROSS_CLOUD_DATA_TRANSFER_METERING_DIMENSION"
	AWS_EC2_TO_AZURE_VAULT_METERING_DIMENSION MeteringDimension = "AWS_EC2_TO_AZURE_VAULT_METERING_DIMENSION"
	AWS_S3_TO_AZURE_VAULT_METERING_DIMENSION MeteringDimension = "AWS_S3_TO_AZURE_VAULT_METERING_DIMENSION"
	AWS_RDS_TO_AZURE_VAULT_METERING_DIMENSION MeteringDimension = "AWS_RDS_TO_AZURE_VAULT_METERING_DIMENSION"
	AWS_DYNAMO_DB_TO_AZURE_VAULT_METERING_DIMENSION MeteringDimension = "AWS_DYNAMO_DB_TO_AZURE_VAULT_METERING_DIMENSION"
	AWS_EKS_TO_AZURE_VAULT_METERING_DIMENSION MeteringDimension = "AWS_EKS_TO_AZURE_VAULT_METERING_DIMENSION"
	AZURE_VIRTUAL_MACHINE_TO_AWS_VAULT_METERING_DIMENSION MeteringDimension = "AZURE_VIRTUAL_MACHINE_TO_AWS_VAULT_METERING_DIMENSION"
	AZURE_STORAGE_ACCOUNT_TO_AWS_VAULT_METERING_DIMENSION MeteringDimension = "AZURE_STORAGE_ACCOUNT_TO_AWS_VAULT_METERING_DIMENSION"
	AZURE_SQL_VIRTUAL_MACHINE_TO_AWS_VAULT_METERING_DIMENSION MeteringDimension = "AZURE_SQL_VIRTUAL_MACHINE_TO_AWS_VAULT_METERING_DIMENSION"
	RANSOMWARE_PROTECTED_STORAGE_METERING_DIMENSION MeteringDimension = "RANSOMWARE_PROTECTED_STORAGE_METERING_DIMENSION"
)

// All allowed values of MeteringDimension enum
var AllowedMeteringDimensionEnumValues = []MeteringDimension{
	"AWS_EC2_METERING_DIMENSION",
	"AWS_RDS_METERING_DIMENSION",
	"AWS_S3_METERING_DIMENSION",
	"AWS_DYNAMO_DB_METERING_DIMENSION",
	"AWS_EKS_METERING_DIMENSION",
	"AZURE_VIRTUAL_MACHINE_METERING_DIMENSION",
	"AZURE_STORAGE_ACCOUNT_METERING_DIMENSION",
	"AZURE_SQL_VIRTUAL_MACHINE_METERING_DIMENSION",
	"GCP_VM_INSTANCE_METERING_DIMENSION",
	"GCP_CLOUD_STORAGE_METERING_DIMENSION",
	"GCP_CLOUD_SQL_POSTGRES_SQL_METERING_DIMENSION",
	"GCP_CLOUD_SQL_MYSQL_METERING_DIMENSION",
	"GCP_CLOUD_SQL_SQL_SERVER_METERING_DIMENSION",
	"DATA_TRANSFER_METERING_DIMENSION",
	"CROSS_CLOUD_DATA_TRANSFER_METERING_DIMENSION",
	"AWS_EC2_TO_AZURE_VAULT_METERING_DIMENSION",
	"AWS_S3_TO_AZURE_VAULT_METERING_DIMENSION",
	"AWS_RDS_TO_AZURE_VAULT_METERING_DIMENSION",
	"AWS_DYNAMO_DB_TO_AZURE_VAULT_METERING_DIMENSION",
	"AWS_EKS_TO_AZURE_VAULT_METERING_DIMENSION",
	"AZURE_VIRTUAL_MACHINE_TO_AWS_VAULT_METERING_DIMENSION",
	"AZURE_STORAGE_ACCOUNT_TO_AWS_VAULT_METERING_DIMENSION",
	"AZURE_SQL_VIRTUAL_MACHINE_TO_AWS_VAULT_METERING_DIMENSION",
	"RANSOMWARE_PROTECTED_STORAGE_METERING_DIMENSION",
}

func (v *MeteringDimension) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MeteringDimension(value)
	for _, existing := range AllowedMeteringDimensionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MeteringDimension", value)
}

// NewMeteringDimensionFromValue returns a pointer to a valid MeteringDimension
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMeteringDimensionFromValue(v string) (*MeteringDimension, error) {
	ev := MeteringDimension(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MeteringDimension: valid values are %v", v, AllowedMeteringDimensionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MeteringDimension) IsValid() bool {
	for _, existing := range AllowedMeteringDimensionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MeteringDimension value
func (v MeteringDimension) Ptr() *MeteringDimension {
	return &v
}

type NullableMeteringDimension struct {
	value *MeteringDimension
	isSet bool
}

func (v NullableMeteringDimension) Get() *MeteringDimension {
	return v.value
}

func (v *NullableMeteringDimension) Set(val *MeteringDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableMeteringDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableMeteringDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeteringDimension(val *MeteringDimension) *NullableMeteringDimension {
	return &NullableMeteringDimension{value: val, isSet: true}
}

func (v NullableMeteringDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeteringDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

