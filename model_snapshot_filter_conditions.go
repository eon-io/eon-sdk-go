/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
)

// checks if the SnapshotFilterConditions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotFilterConditions{}

// SnapshotFilterConditions struct for SnapshotFilterConditions
type SnapshotFilterConditions struct {
	PointInTime *SnapshotDateFilters `json:"pointInTime,omitempty"`
}

// NewSnapshotFilterConditions instantiates a new SnapshotFilterConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotFilterConditions() *SnapshotFilterConditions {
	this := SnapshotFilterConditions{}
	return &this
}

// NewSnapshotFilterConditionsWithDefaults instantiates a new SnapshotFilterConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotFilterConditionsWithDefaults() *SnapshotFilterConditions {
	this := SnapshotFilterConditions{}
	return &this
}

// GetPointInTime returns the PointInTime field value if set, zero value otherwise.
func (o *SnapshotFilterConditions) GetPointInTime() SnapshotDateFilters {
	if o == nil || IsNil(o.PointInTime) {
		var ret SnapshotDateFilters
		return ret
	}
	return *o.PointInTime
}

// GetPointInTimeOk returns a tuple with the PointInTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterConditions) GetPointInTimeOk() (*SnapshotDateFilters, bool) {
	if o == nil || IsNil(o.PointInTime) {
		return nil, false
	}
	return o.PointInTime, true
}

// HasPointInTime returns a boolean if a field has been set.
func (o *SnapshotFilterConditions) HasPointInTime() bool {
	if o != nil && !IsNil(o.PointInTime) {
		return true
	}

	return false
}

// SetPointInTime gets a reference to the given SnapshotDateFilters and assigns it to the PointInTime field.
func (o *SnapshotFilterConditions) SetPointInTime(v SnapshotDateFilters) {
	o.PointInTime = &v
}

func (o SnapshotFilterConditions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotFilterConditions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PointInTime) {
		toSerialize["pointInTime"] = o.PointInTime
	}
	return toSerialize, nil
}

type NullableSnapshotFilterConditions struct {
	value *SnapshotFilterConditions
	isSet bool
}

func (v NullableSnapshotFilterConditions) Get() *SnapshotFilterConditions {
	return v.value
}

func (v *NullableSnapshotFilterConditions) Set(val *SnapshotFilterConditions) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotFilterConditions) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotFilterConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotFilterConditions(val *SnapshotFilterConditions) *NullableSnapshotFilterConditions {
	return &NullableSnapshotFilterConditions{value: val, isSet: true}
}

func (v NullableSnapshotFilterConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotFilterConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


