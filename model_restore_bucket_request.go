/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestoreBucketRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreBucketRequest{}

// RestoreBucketRequest struct for RestoreBucketRequest
type RestoreBucketRequest struct {
	Destination ObjectStorageDestination `json:"destination"`
	// Eon-assigned ID of the restore account.
	RestoreAccountId string `json:"restoreAccountId"`
}

type _RestoreBucketRequest RestoreBucketRequest

// NewRestoreBucketRequest instantiates a new RestoreBucketRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreBucketRequest(destination ObjectStorageDestination, restoreAccountId string) *RestoreBucketRequest {
	this := RestoreBucketRequest{}
	this.Destination = destination
	this.RestoreAccountId = restoreAccountId
	return &this
}

// NewRestoreBucketRequestWithDefaults instantiates a new RestoreBucketRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreBucketRequestWithDefaults() *RestoreBucketRequest {
	this := RestoreBucketRequest{}
	return &this
}

// GetDestination returns the Destination field value
func (o *RestoreBucketRequest) GetDestination() ObjectStorageDestination {
	if o == nil {
		var ret ObjectStorageDestination
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *RestoreBucketRequest) GetDestinationOk() (*ObjectStorageDestination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *RestoreBucketRequest) SetDestination(v ObjectStorageDestination) {
	o.Destination = v
}

// GetRestoreAccountId returns the RestoreAccountId field value
func (o *RestoreBucketRequest) GetRestoreAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestoreAccountId
}

// GetRestoreAccountIdOk returns a tuple with the RestoreAccountId field value
// and a boolean to check if the value has been set.
func (o *RestoreBucketRequest) GetRestoreAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestoreAccountId, true
}

// SetRestoreAccountId sets field value
func (o *RestoreBucketRequest) SetRestoreAccountId(v string) {
	o.RestoreAccountId = v
}

func (o RestoreBucketRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreBucketRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination"] = o.Destination
	toSerialize["restoreAccountId"] = o.RestoreAccountId
	return toSerialize, nil
}

func (o *RestoreBucketRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination",
		"restoreAccountId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestoreBucketRequest := _RestoreBucketRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// Allow unknown fields to handle API schema differences
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestoreBucketRequest)

	if err != nil {
		return err
	}

	*o = RestoreBucketRequest(varRestoreBucketRequest)

	return err
}

type NullableRestoreBucketRequest struct {
	value *RestoreBucketRequest
	isSet bool
}

func (v NullableRestoreBucketRequest) Get() *RestoreBucketRequest {
	return v.value
}

func (v *NullableRestoreBucketRequest) Set(val *RestoreBucketRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreBucketRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreBucketRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreBucketRequest(val *RestoreBucketRequest) *NullableRestoreBucketRequest {
	return &NullableRestoreBucketRequest{value: val, isSet: true}
}

func (v NullableRestoreBucketRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreBucketRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


