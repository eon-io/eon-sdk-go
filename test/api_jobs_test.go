/*
Eon API

Testing JobsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package eon

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/eon.io/eon-service/services/frontend/api-gateway/sdk/external-go"
)

func Test_eon_JobsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test JobsAPIService GetBackupJob", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var jobId string
		var projectId string

		resp, httpRes, err := apiClient.JobsAPI.GetBackupJob(context.Background(), jobId, projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JobsAPIService GetRestoreJob", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var jobId string
		var projectId string

		resp, httpRes, err := apiClient.JobsAPI.GetRestoreJob(context.Background(), jobId, projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JobsAPIService ListBackupJobs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string

		resp, httpRes, err := apiClient.JobsAPI.ListBackupJobs(context.Background(), projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JobsAPIService ListRestoreJobs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var projectId string

		resp, httpRes, err := apiClient.JobsAPI.ListRestoreJobs(context.Background(), projectId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
