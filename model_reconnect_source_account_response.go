/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReconnectSourceAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReconnectSourceAccountResponse{}

// ReconnectSourceAccountResponse struct for ReconnectSourceAccountResponse
type ReconnectSourceAccountResponse struct {
	SourceAccount SourceAccount `json:"sourceAccount"`
}

type _ReconnectSourceAccountResponse ReconnectSourceAccountResponse

// NewReconnectSourceAccountResponse instantiates a new ReconnectSourceAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReconnectSourceAccountResponse(sourceAccount SourceAccount) *ReconnectSourceAccountResponse {
	this := ReconnectSourceAccountResponse{}
	this.SourceAccount = sourceAccount
	return &this
}

// NewReconnectSourceAccountResponseWithDefaults instantiates a new ReconnectSourceAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReconnectSourceAccountResponseWithDefaults() *ReconnectSourceAccountResponse {
	this := ReconnectSourceAccountResponse{}
	return &this
}

// GetSourceAccount returns the SourceAccount field value
func (o *ReconnectSourceAccountResponse) GetSourceAccount() SourceAccount {
	if o == nil {
		var ret SourceAccount
		return ret
	}

	return o.SourceAccount
}

// GetSourceAccountOk returns a tuple with the SourceAccount field value
// and a boolean to check if the value has been set.
func (o *ReconnectSourceAccountResponse) GetSourceAccountOk() (*SourceAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccount, true
}

// SetSourceAccount sets field value
func (o *ReconnectSourceAccountResponse) SetSourceAccount(v SourceAccount) {
	o.SourceAccount = v
}

func (o ReconnectSourceAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReconnectSourceAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceAccount"] = o.SourceAccount
	return toSerialize, nil
}

func (o *ReconnectSourceAccountResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sourceAccount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReconnectSourceAccountResponse := _ReconnectSourceAccountResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	// Allow unknown fields to handle API schema differences
	// decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReconnectSourceAccountResponse)

	if err != nil {
		return err
	}

	*o = ReconnectSourceAccountResponse(varReconnectSourceAccountResponse)

	return err
}

type NullableReconnectSourceAccountResponse struct {
	value *ReconnectSourceAccountResponse
	isSet bool
}

func (v NullableReconnectSourceAccountResponse) Get() *ReconnectSourceAccountResponse {
	return v.value
}

func (v *NullableReconnectSourceAccountResponse) Set(val *ReconnectSourceAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReconnectSourceAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReconnectSourceAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReconnectSourceAccountResponse(val *ReconnectSourceAccountResponse) *NullableReconnectSourceAccountResponse {
	return &NullableReconnectSourceAccountResponse{value: val, isSet: true}
}

func (v NullableReconnectSourceAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReconnectSourceAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


