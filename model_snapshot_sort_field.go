/*
Eon API

The Eon.io REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eon

import (
	"encoding/json"
	"fmt"
)

// SnapshotSortField Field to sort by.
type SnapshotSortField string

// List of SnapshotSortField
const (
	SNAPSHOT_SORT_POINT_IN_TIME SnapshotSortField = "pointInTime"
)

// All allowed values of SnapshotSortField enum
var AllowedSnapshotSortFieldEnumValues = []SnapshotSortField{
	"pointInTime",
}

func (v *SnapshotSortField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SnapshotSortField(value)
	for _, existing := range AllowedSnapshotSortFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SnapshotSortField", value)
}

// NewSnapshotSortFieldFromValue returns a pointer to a valid SnapshotSortField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSnapshotSortFieldFromValue(v string) (*SnapshotSortField, error) {
	ev := SnapshotSortField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SnapshotSortField: valid values are %v", v, AllowedSnapshotSortFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SnapshotSortField) IsValid() bool {
	for _, existing := range AllowedSnapshotSortFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SnapshotSortField value
func (v SnapshotSortField) Ptr() *SnapshotSortField {
	return &v
}

type NullableSnapshotSortField struct {
	value *SnapshotSortField
	isSet bool
}

func (v NullableSnapshotSortField) Get() *SnapshotSortField {
	return v.value
}

func (v *NullableSnapshotSortField) Set(val *SnapshotSortField) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotSortField) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotSortField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotSortField(val *SnapshotSortField) *NullableSnapshotSortField {
	return &NullableSnapshotSortField{value: val, isSet: true}
}

func (v NullableSnapshotSortField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotSortField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

